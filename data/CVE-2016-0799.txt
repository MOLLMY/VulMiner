66 CVE-2016-0799/OpenSSL_1.0.1_CVE-2016-0799_b_print.c cfunc 252
const char *format,
ch = *format++;
ch = *format++;
ch = *format++;
ch = *format++;
ch = *format++;
ch = *format++;
ch = *format++;
ch = *format++;
ch = *format++;
format++;
ch = *format++;
ch = *format++;
ch = *format++;
ch = *format++;
ch = *format++;
ch = *format++;
ch = *format++;
ch = *format++;
ch = *format++;
if (isdigit((unsigned char)ch)) {
0

67 CVE-2016-0799/OpenSSL_1.0.1_CVE-2016-0799_b_print.c cppfunc 252
const char *format,
ch = *format++;
ch = *format++;
ch = *format++;
ch = *format++;
ch = *format++;
ch = *format++;
ch = *format++;
ch = *format++;
ch = *format++;
format++;
ch = *format++;
ch = *format++;
ch = *format++;
ch = *format++;
ch = *format++;
ch = *format++;
ch = *format++;
ch = *format++;
ch = *format++;
if (isdigit((unsigned char)ch)) {
0

321 CVE-2016-0799/OpenSSL_1.0.1_CVE-2016-0799_b_print.c cfunc 234
const char *format,
ch = *format++;
ch = *format++;
ch = *format++;
ch = *format++;
ch = *format++;
ch = *format++;
ch = *format++;
ch = *format++;
ch = *format++;
format++;
ch = *format++;
ch = *format++;
ch = *format++;
ch = *format++;
ch = *format++;
ch = *format++;
ch = *format++;
ch = *format++;
ch = *format++;
if (isdigit((unsigned char)ch)) {
0

322 CVE-2016-0799/OpenSSL_1.0.1_CVE-2016-0799_b_print.c cppfunc 234
const char *format,
ch = *format++;
ch = *format++;
ch = *format++;
ch = *format++;
ch = *format++;
ch = *format++;
ch = *format++;
ch = *format++;
ch = *format++;
format++;
ch = *format++;
ch = *format++;
ch = *format++;
ch = *format++;
ch = *format++;
ch = *format++;
ch = *format++;
ch = *format++;
ch = *format++;
if (isdigit((unsigned char)ch)) {
0

325 CVE-2016-0799/OpenSSL_1.0.1_CVE-2016-0799_b_print.c cfunc 522
const char *prefix = "";
if (base == 8) prefix = "0";
if (base == 16) prefix = "0x";
spadlen = min - OSSL_MAX(max, place) - (signvalue ? 1 : 0) - strlen(prefix);
0

542 CVE-2016-0799/OpenSSL_1.0.1_CVE-2016-0799_b_print.c cfunc 743
char **sbuffer,
char **buffer,
assert(*sbuffer != NULL || buffer != NULL);
memcpy(*buffer, *sbuffer, *currlen);
*sbuffer = NULL;
assert(*sbuffer != NULL);
0

543 CVE-2016-0799/OpenSSL_1.0.1_CVE-2016-0799_b_print.c cppfunc 743
char **sbuffer,
char **buffer,
assert(*sbuffer != NULL || buffer != NULL);
memcpy(*buffer, *sbuffer, *currlen);
*sbuffer = NULL;
assert(*sbuffer != NULL);
0

615 CVE-2016-0799/OpenSSL_1.0.1_CVE-2016-0799_b_print.c cfunc 753
char **sbuffer,
char **buffer,
size_t *maxlen,
assert(*sbuffer != NULL || buffer != NULL);
*maxlen = 1024;
*buffer = OPENSSL_malloc(*maxlen);
assert(*sbuffer != NULL);
memcpy(*buffer, *sbuffer, *currlen);
*sbuffer = NULL;
*maxlen += 1024;
*buffer = OPENSSL_realloc(*buffer, *maxlen);
assert(*sbuffer != NULL || *buffer != NULL);
1

616 CVE-2016-0799/OpenSSL_1.0.1_CVE-2016-0799_b_print.c cppfunc 753
char **sbuffer,
char **buffer,
size_t *maxlen,
assert(*sbuffer != NULL || buffer != NULL);
*maxlen = 1024;
*buffer = OPENSSL_malloc(*maxlen);
assert(*sbuffer != NULL);
memcpy(*buffer, *sbuffer, *currlen);
*sbuffer = NULL;
*maxlen += 1024;
*buffer = OPENSSL_realloc(*buffer, *maxlen);
assert(*sbuffer != NULL || *buffer != NULL);
1

619 CVE-2016-0799/OpenSSL_1.0.1_CVE-2016-0799_b_print.c cfunc 823
va_list args;
va_start(args, format);
ret = BIO_vsnprintf(buf, n, format, args);
int BIO_vsnprintf(char *buf, size_t n, const char *format, va_list args)
_dopr(&buf, NULL, &n, &retlen, &truncated, format, args);
const char *format, va_list args);
va_end(args);
1

620 CVE-2016-0799/OpenSSL_1.0.1_CVE-2016-0799_b_print.c cppfunc 823
va_list args;
va_start(args, format);
ret = BIO_vsnprintf(buf, n, format, args);
int BIO_vsnprintf(char *buf, size_t n, const char *format, va_list args)
_dopr(&buf, NULL, &n, &retlen, &truncated, format, args);
const char *format, va_list args);
va_end(args);
1

662 CVE-2016-0799/OpenSSL_1.0.1_CVE-2016-0799_b_print.c cfunc 777
va_list args;
va_start(args, format);
ret = BIO_vprintf(bio, format, args);
int BIO_vprintf (BIO *bio, const char *format, va_list args)
&retlen, &ignored, format, args);
const char *format, va_list args);
va_end(args);
1

663 CVE-2016-0799/OpenSSL_1.0.1_CVE-2016-0799_b_print.c cppfunc 777
va_list args;
va_start(args, format);
ret = BIO_vprintf(bio, format, args);
int BIO_vprintf (BIO *bio, const char *format, va_list args)
&retlen, &ignored, format, args);
const char *format, va_list args);
va_end(args);
1

667 CVE-2016-0799/OpenSSL_1.0.1_CVE-2016-0799_b_print.c cfunc 744
char **sbuffer,
char **buffer,
size_t *currlen,
size_t *maxlen,
assert(*sbuffer != NULL || buffer != NULL);
*maxlen = 1024;
*buffer = OPENSSL_malloc(*maxlen);
assert(*sbuffer != NULL);
*sbuffer = NULL;
*maxlen += 1024;
*buffer = OPENSSL_realloc(*buffer, *maxlen);
memcpy(*buffer, *sbuffer, *currlen);
1

13593 CVE-2016-0799/OpenSSL_1.0.1_CVE-2016-0799_b_print.c Buffer_Overflow_boundedcpy 749
static void doapr_outch(
char **sbuffer,
char **buffer,
size_t *currlen,
size_t *maxlen,
int c)
if (buffer) {
while (*currlen >= *maxlen) {
if (*buffer == NULL) {
*buffer = OPENSSL_malloc(*maxlen);
if (*currlen > 0) {
memcpy(*buffer, *sbuffer, *currlen);
1

13607 CVE-2016-0799/OpenSSL_1.0.1_CVE-2016-0799_b_print.c Buffer_Overflow_boundedcpy 749
#define BUFFER_INC 
static int doapr_outch(
char **sbuffer,
char **buffer,
size_t *currlen,
size_t *maxlen,
int c)
if (buffer) {
while (*currlen >= *maxlen) {
*maxlen += BUFFER_INC;
if (*buffer == NULL) {
*buffer = OPENSSL_malloc(*maxlen);
if (*buffer == NULL)
return 0;
if (*currlen > 0) {
memcpy(*buffer, *sbuffer, *currlen);
0

14027 CVE-2016-0799/OpenSSL_1.0.1_CVE-2016-0799_b_print.c Buffer_Overflow_boundedcpy 749
#define BUFFER_INC 
static int doapr_outch(
char **sbuffer,
char **buffer,
size_t *currlen,
size_t *maxlen,
int c)
if (buffer) {
while (*currlen >= *maxlen) {
*maxlen += BUFFER_INC;
if (*buffer == NULL) {
componet_len = *maxlen;
*buffer = OPENSSL_malloc(componet_len);
if (*buffer == NULL)
return 0;
if (*currlen > 0) {
memcpy(*buffer, *sbuffer, *currlen);
0

14041 CVE-2016-0799/OpenSSL_1.0.1_CVE-2016-0799_b_print.c Buffer_Overflow_boundedcpy 749
static void doapr_outch(
char **sbuffer,
char **buffer,
size_t *currlen,
size_t *maxlen,
int c)
if (buffer) {
while (*currlen >= *maxlen) {
if (*buffer == NULL) {
componet_len = *maxlen;
*buffer = OPENSSL_malloc(componet_len);
if (*currlen > 0) {
memcpy(*buffer, *sbuffer, *currlen);
1

14055 CVE-2016-0799/OpenSSL_1.0.1_CVE-2016-0799_b_print.c Buffer_Overflow_boundedcpy 749
#define BUFFER_INC 
static int doapr_outch(
char **sbuffer,
char **buffer,
size_t *currlen,
size_t *maxlen,
int c)
if (buffer) {
while (*currlen >= *maxlen) {
*maxlen += BUFFER_INC;
if (*buffer == NULL) {
*buffer = func(buffer, &maxlen)
static char** func(char **buffer, size_t **maxlen)
*buffer = OPENSSL_malloc(**maxlen);
return *buffer
*buffer = func(buffer, maxlen)
if (*buffer == NULL)
return 0;
if (*currlen > 0) {
memcpy(*buffer, *sbuffer, *currlen);
0

14069 CVE-2016-0799/OpenSSL_1.0.1_CVE-2016-0799_b_print.c Buffer_Overflow_boundedcpy 749
static void doapr_outch(
char **sbuffer,
char **buffer,
size_t *currlen,
size_t *maxlen,
int c)
if (buffer) {
while (*currlen >= *maxlen) {
if (*buffer == NULL) {
*buffer = func(buffer, &maxlen)
static char** func(char **buffer, size_t **maxlen)
*buffer = OPENSSL_malloc(**maxlen);
return *buffer
*buffer = func(buffer, maxlen)
if (*currlen > 0) {
memcpy(*buffer, *sbuffer, *currlen);
1

14083 CVE-2016-0799/OpenSSL_1.0.1_CVE-2016-0799_b_print.c Buffer_Overflow_boundedcpy 749
#define BUFFER_INC 
static int doapr_outch(
char **sbuffer,
char **buffer,
size_t *currlen,
size_t *maxlen,
int c)
structType myStruct;
if (buffer) {
while (*currlen >= *maxlen) {
*maxlen += BUFFER_INC;
if (*buffer == NULL) {
myStruct.structFirst = maxlen;
*buffer = func(buffer, myStruct)
static char** func(char **buffer, structType myStruct)
size_t *maxlen = myStruct.structFirst;
*buffer = OPENSSL_malloc(*maxlen);
return *buffer
*buffer = func(buffer, myStruct)
if (*buffer == NULL)
return 0;
if (*currlen > 0) {
memcpy(*buffer, *sbuffer, *currlen);
0

14097 CVE-2016-0799/OpenSSL_1.0.1_CVE-2016-0799_b_print.c Buffer_Overflow_boundedcpy 749
static void doapr_outch(
char **sbuffer,
char **buffer,
size_t *currlen,
size_t *maxlen,
int c)
structType myStruct;
if (buffer) {
while (*currlen >= *maxlen) {
if (*buffer == NULL) {
myStruct.structFirst = maxlen;
*buffer = func(buffer, myStruct)
static char** func(char **buffer, structType myStruct)
size_t *maxlen = myStruct.structFirst;
*buffer = OPENSSL_malloc(*maxlen);
return *buffer
*buffer = func(buffer, myStruct)
if (*currlen > 0) {
memcpy(*buffer, *sbuffer, *currlen);
1

14111 CVE-2016-0799/OpenSSL_1.0.1_CVE-2016-0799_b_print.c Buffer_Overflow_boundedcpy 749
#define BUFFER_INC 
static int doapr_outch(
char **sbuffer,
char **buffer,
size_t *currlen,
size_t *maxlen,
int c)
unionType myUnion;
if (buffer) {
while (*currlen >= *maxlen) {
*maxlen += BUFFER_INC;
if (*buffer == NULL) {
myUnion.unionFirst = maxlen;
*buffer = func(buffer, myUnion)
static char** func(char **buffer, unionType myUnion)
size_t *maxlen = myUnion.unionSecond;
*buffer = OPENSSL_malloc(*maxlen);
return *buffer
*buffer = func(buffer, myUnion)
if (*buffer == NULL)
return 0;
if (*currlen > 0) {
memcpy(*buffer, *sbuffer, *currlen);
0

14125 CVE-2016-0799/OpenSSL_1.0.1_CVE-2016-0799_b_print.c Buffer_Overflow_boundedcpy 749
static void doapr_outch(
char **sbuffer,
char **buffer,
size_t *currlen,
size_t *maxlen,
int c)
unionType myUnion;
if (buffer) {
while (*currlen >= *maxlen) {
if (*buffer == NULL) {
myUnion.unionFirst = maxlen;
*buffer = func(buffer, myUnion)
static char** func(char **buffer, unionType myUnion)
size_t *maxlen = myUnion.unionSecond;
*buffer = OPENSSL_malloc(*maxlen);
return *buffer
*buffer = func(buffer, myUnion)
if (*currlen > 0) {
memcpy(*buffer, *sbuffer, *currlen);
1

14139 CVE-2016-0799/OpenSSL_1.0.1_CVE-2016-0799_b_print.c Buffer_Overflow_boundedcpy 749
#define BUFFER_INC 
static int doapr_outch(
char **sbuffer,
char **buffer,
size_t *currlen,
size_t *maxlen,
int c)
if (buffer) {
while (*currlen >= *maxlen) {
*maxlen += BUFFER_INC;
if (*buffer == NULL) {
*buffer = func(buffer, maxlen)
static char** func(char **buffer, size_t *maxlen)
*buffer = OPENSSL_malloc(*maxlen);
return *buffer
*buffer = func(buffer, maxlen)
if (*buffer == NULL)
return 0;
if (*currlen > 0) {
memcpy(*buffer, *sbuffer, *currlen);
0

14153 CVE-2016-0799/OpenSSL_1.0.1_CVE-2016-0799_b_print.c Buffer_Overflow_boundedcpy 749
static char** (*funcPtr)(char **, size_t *) = badSource;
static void doapr_outch(
char **sbuffer,
char **buffer,
size_t *currlen,
size_t *maxlen,
int c)
if (buffer) {
while (*currlen >= *maxlen) {
if (*buffer == NULL) {
*buffer = funcPtr(buffer, maxlen)
static char** badSource(char **buffer, size_t *maxlen)
*buffer = OPENSSL_malloc(*maxlen);
return *buffer
*buffer = funcPtr(buffer, maxlen)
if (*currlen > 0) {
memcpy(*buffer, *sbuffer, *currlen);
1

14167 CVE-2016-0799/OpenSSL_1.0.1_CVE-2016-0799_b_print.c Buffer_Overflow_boundedcpy 749
#define BUFFER_INC 
static int doapr_outch(
char **sbuffer,
char **buffer,
size_t *currlen,
size_t *maxlen,
int c)
if (buffer) {
while (*currlen >= *maxlen) {
*maxlen += BUFFER_INC;
if (*buffer == NULL) {
*buffer = func(buffer, maxlen)
static char** func(char **buffer, size_t *maxlen)
*buffer = OPENSSL_malloc(*maxlen);
return *buffer
*buffer = func(buffer, maxlen)
if (*buffer == NULL)
return 0;
if (*currlen > 0) {
memcpy(*buffer, *sbuffer, *currlen);
0

14181 CVE-2016-0799/OpenSSL_1.0.1_CVE-2016-0799_b_print.c Buffer_Overflow_boundedcpy 749
static void doapr_outch(
char **sbuffer,
char **buffer,
size_t *currlen,
size_t *maxlen,
int c)
if (buffer) {
while (*currlen >= *maxlen) {
if (*buffer == NULL) {
*buffer = func(buffer, maxlen)
static char** func(char **buffer, size_t *maxlen)
*buffer = OPENSSL_malloc(*maxlen);
return *buffer
*buffer = func(buffer, maxlen)
if (*currlen > 0) {
memcpy(*buffer, *sbuffer, *currlen);
1

14195 CVE-2016-0799/OpenSSL_1.0.1_CVE-2016-0799_b_print.c Buffer_Overflow_boundedcpy 749
#define BUFFER_INC 
static int doapr_outch(
char **sbuffer,
char **buffer,
size_t *currlen,
size_t *maxlen,
int c)
if (buffer) {
while (*currlen >= *maxlen) {
*maxlen += BUFFER_INC;
if (*buffer == NULL) {
char *dataCopy = OPENSSL_malloc(*maxlen);
*buffer = dataCopy;
if (*buffer == NULL)
return 0;
if (*currlen > 0) {
memcpy(*buffer, *sbuffer, *currlen);
0

14209 CVE-2016-0799/OpenSSL_1.0.1_CVE-2016-0799_b_print.c Buffer_Overflow_boundedcpy 749
static void doapr_outch(
char **sbuffer,
char **buffer,
size_t *currlen,
size_t *maxlen,
int c)
if (buffer) {
while (*currlen >= *maxlen) {
if (*buffer == NULL) {
char *dataCopy = OPENSSL_malloc(*maxlen);
*buffer = dataCopy;
if (*currlen > 0) {
memcpy(*buffer, *sbuffer, *currlen);
1

14223 CVE-2016-0799/OpenSSL_1.0.1_CVE-2016-0799_b_print.c Buffer_Overflow_boundedcpy 749
#define BUFFER_INC 
static int doapr_outch(
char **sbuffer,
char **buffer,
size_t *currlen,
size_t *maxlen,
int c)
size_t *dataArray[5];
if (buffer) {
while (*currlen >= *maxlen) {
*maxlen += BUFFER_INC;
if (*buffer == NULL) {
dataArray[2] = maxlen;
*buffer = func(buffer, dataArray);
static char* func(char **buffer, size_t *dataArray[])
ssize_t *maxlen = dataArray[2];
*buffer = OPENSSL_malloc(*maxlen);;
return *buffer;
*buffer = func(buffer, dataArray);
if (*buffer == NULL)
return 0;
if (*currlen > 0) {
memcpy(*buffer, *sbuffer, *currlen);
0

14237 CVE-2016-0799/OpenSSL_1.0.1_CVE-2016-0799_b_print.c Buffer_Overflow_boundedcpy 749
static void doapr_outch(
char **sbuffer,
char **buffer,
size_t *currlen,
size_t *maxlen,
int c)
size_t *dataArray[5];
if (buffer) {
while (*currlen >= *maxlen) {
if (*buffer == NULL) {
dataArray[2] = maxlen;
*buffer = func(buffer, dataArray);
static char* func(char **buffer, size_t *dataArray[])
ssize_t *maxlen = dataArray[2];
*buffer = OPENSSL_malloc(*maxlen);
return *buffer;
*buffer = func(buffer, dataArray);
if (*currlen > 0) {
memcpy(*buffer, *sbuffer, *currlen);
1

