6 CVE-2014-6427/Wireshark_1.12.0_CVE_2014_6427_epan_dissectors_packet-rtsp.c cfunc 514
rtsp_create_conversation(packet_info *pinfo, const guchar *line_begin,
size_t line_len, gint rdt_feature_level)
guchar    buf[256];
if (line_len > sizeof(buf) - 1)
line_len = sizeof(buf) - 1;
memcpy(buf, line_begin, line_len);
0

10 CVE-2014-6427/Wireshark_1.12.0_CVE_2014_6427_epan_dissectors_packet-rtsp.c cfunc 519
buf[line_len] = '\0';
tmp = buf + STRLEN_CONST(rtsp_transport);
tmp++;
while (*tmp && isspace(*tmp))
0

11 CVE-2014-6427/Wireshark_1.12.0_CVE_2014_6427_epan_dissectors_packet-rtsp.c cppfunc 519
buf[line_len] = '\0';
tmp = buf + STRLEN_CONST(rtsp_transport);
tmp++;
while (*tmp && isspace(*tmp))
0

63 CVE-2014-6427/Wireshark_1.12.0_CVE_2014_6427_epan_dissectors_packet-rtsp.c cfunc 1310
process_rtsp_request(tvbuff_t *tvb, int offset, const guchar *data,
(len == linelen || isspace(data[len])))
g_ascii_strncasecmp(rtsp_methods[ii], data, len) == 0 &&
url = data;
while (url < lineend && !isspace(*url))
url++;
while (url < lineend && isspace(*url))
url++;
while (url < lineend && !isspace(*url))
url++;
while (url < lineend && !isspace(*url))
0

64 CVE-2014-6427/Wireshark_1.12.0_CVE_2014_6427_epan_dissectors_packet-rtsp.c cppfunc 1310
process_rtsp_request(tvbuff_t *tvb, int offset, const guchar *data,
(len == linelen || isspace(data[len])))
g_ascii_strncasecmp(rtsp_methods[ii], data, len) == 0 &&
url = data;
while (url < lineend && !isspace(*url))
url++;
while (url < lineend && isspace(*url))
url++;
while (url < lineend && !isspace(*url))
url++;
while (url < lineend && !isspace(*url))
0

141 CVE-2014-6427/Wireshark_1.12.0_CVE_2014_6427_epan_dissectors_packet-rtsp.c cfunc 1297
size_t len = strlen(rtsp_methods[ii]);
g_ascii_strncasecmp(rtsp_methods[ii], data, len) == 0 &&
for (ii = 0; ii < RTSP_NMETHODS; ii++) {
if (ii == RTSP_NMETHODS) {
(gint) strlen(rtsp_methods[ii]), rtsp_methods[ii]);
0

143 CVE-2014-6427/Wireshark_1.12.0_CVE_2014_6427_epan_dissectors_packet-rtsp.c cfunc 671
char   *p;
buf[line_len] = '\0';
tmp = buf + STRLEN_CONST(rtsp_content_length);
while (*tmp && isspace(*tmp))
tmp++;
content_length = strtol(tmp, &p, 10);
0

144 CVE-2014-6427/Wireshark_1.12.0_CVE_2014_6427_epan_dissectors_packet-rtsp.c cppfunc 671
char   *p;
buf[line_len] = '\0';
tmp = buf + STRLEN_CONST(rtsp_content_length);
while (*tmp && isspace(*tmp))
tmp++;
content_length = strtol(tmp, &p, 10);
0

145 CVE-2014-6427/Wireshark_1.12.0_CVE_2014_6427_epan_dissectors_packet-rtsp.c cfunc 673
char   *p;
content_length = strtol(tmp, &p, 10);
up = p;
if (up == tmp || (*up != '\0' && !isspace(*up)))
0

146 CVE-2014-6427/Wireshark_1.12.0_CVE_2014_6427_epan_dissectors_packet-rtsp.c cppfunc 673
char   *p;
content_length = strtol(tmp, &p, 10);
up = p;
if (up == tmp || (*up != '\0' && !isspace(*up)))
0

153 CVE-2014-6427/Wireshark_1.12.0_CVE_2014_6427_epan_dissectors_packet-rtsp.c cfunc 1345
process_rtsp_reply(tvbuff_t *tvb, int offset, const guchar *data,
const guchar *status   = data;
while (status < lineend && !isspace(*status))
status++;
while (status < lineend && isspace(*status))
status++;
while (status < lineend && isspace(*status))
0

154 CVE-2014-6427/Wireshark_1.12.0_CVE_2014_6427_epan_dissectors_packet-rtsp.c cppfunc 1345
process_rtsp_reply(tvbuff_t *tvb, int offset, const guchar *data,
const guchar *status   = data;
while (status < lineend && !isspace(*status))
status++;
while (status < lineend && isspace(*status))
status++;
while (status < lineend && isspace(*status))
0

202 CVE-2014-6427/Wireshark_1.12.0_CVE_2014_6427_epan_dissectors_packet-rtsp.c cfunc 1305
process_rtsp_request(tvbuff_t *tvb, int offset, const guchar *data,
(len == linelen || isspace(data[len])))
g_ascii_strncasecmp(rtsp_methods[ii], data, len) == 0 &&
url = data;
while (url < lineend && !isspace(*url))
url++;
while (url < lineend && isspace(*url))
url++;
while (url < lineend && isspace(*url))
0

203 CVE-2014-6427/Wireshark_1.12.0_CVE_2014_6427_epan_dissectors_packet-rtsp.c cppfunc 1305
process_rtsp_request(tvbuff_t *tvb, int offset, const guchar *data,
(len == linelen || isspace(data[len])))
g_ascii_strncasecmp(rtsp_methods[ii], data, len) == 0 &&
url = data;
while (url < lineend && !isspace(*url))
url++;
while (url < lineend && isspace(*url))
url++;
while (url < lineend && isspace(*url))
0

205 CVE-2014-6427/Wireshark_1.12.0_CVE_2014_6427_epan_dissectors_packet-rtsp.c cfunc 1302
process_rtsp_request(tvbuff_t *tvb, int offset, const guchar *data,
g_ascii_strncasecmp(rtsp_methods[ii], data, len) == 0 &&
(len == linelen || isspace(data[len])))
url = data;
while (url < lineend && !isspace(*url))
url++;
while (url < lineend && !isspace(*url))
0

206 CVE-2014-6427/Wireshark_1.12.0_CVE_2014_6427_epan_dissectors_packet-rtsp.c cppfunc 1302
process_rtsp_request(tvbuff_t *tvb, int offset, const guchar *data,
g_ascii_strncasecmp(rtsp_methods[ii], data, len) == 0 &&
(len == linelen || isspace(data[len])))
url = data;
while (url < lineend && !isspace(*url))
url++;
while (url < lineend && !isspace(*url))
0

280 CVE-2014-6427/Wireshark_1.12.0_CVE_2014_6427_epan_dissectors_packet-rtsp.c cfunc 669
buf[line_len] = '\0';
tmp = buf + STRLEN_CONST(rtsp_content_length);
tmp++;
while (*tmp && isspace(*tmp))
0

281 CVE-2014-6427/Wireshark_1.12.0_CVE_2014_6427_epan_dissectors_packet-rtsp.c cppfunc 669
buf[line_len] = '\0';
tmp = buf + STRLEN_CONST(rtsp_content_length);
tmp++;
while (*tmp && isspace(*tmp))
0

284 CVE-2014-6427/Wireshark_1.12.0_CVE_2014_6427_epan_dissectors_packet-rtsp.c cfunc 665
rtsp_get_content_length(const guchar *line_begin, size_t line_len)
guchar  buf[256];
if (line_len > sizeof(buf) - 1) {
line_len = sizeof(buf) - 1;
memcpy(buf, line_begin, line_len);
0

381 CVE-2014-6427/Wireshark_1.12.0_CVE_2014_6427_epan_dissectors_packet-rtsp.c cfunc 1342
process_rtsp_reply(tvbuff_t *tvb, int offset, const guchar *data,
const guchar *status   = data;
while (status < lineend && !isspace(*status))
status++;
while (status < lineend && !isspace(*status))
0

382 CVE-2014-6427/Wireshark_1.12.0_CVE_2014_6427_epan_dissectors_packet-rtsp.c cppfunc 1342
process_rtsp_reply(tvbuff_t *tvb, int offset, const guchar *data,
const guchar *status   = data;
while (status < lineend && !isspace(*status))
status++;
while (status < lineend && !isspace(*status))
0

405 CVE-2014-6427/Wireshark_1.12.0_CVE_2014_6427_epan_dissectors_packet-rtsp.c cfunc 576
buf[line_len] = '\0';
if ((tmp = strstr(buf, rtsp_sps))) {
if ((tmp = strstr(buf, rtsp_cps))) {
guint               s_data_chan, s_mon_chan;
if ((tmp = strstr(buf, rtsp_inter)) == NULL) {
tmp += strlen(rtsp_inter);
i = sscanf(tmp, "%u-%u", &s_data_chan, &s_mon_chan);
0

464 CVE-2014-6427/Wireshark_1.12.0_CVE_2014_6427_epan_dissectors_packet-rtsp.c cfunc 550
buf[line_len] = '\0';
c_data_port = c_mon_port = 0;
if ((tmp = strstr(buf, rtsp_sps))) {
if ((tmp = strstr(buf, rtsp_cps))) {
tmp += strlen(rtsp_cps);
if (sscanf(tmp, "%u-%u", &c_data_port, &c_mon_port) < 1) {
0

525 CVE-2014-6427/Wireshark_1.12.0_CVE_2014_6427_epan_dissectors_packet-rtsp.c cfunc 541
buf[line_len] = '\0';
s_data_port = s_mon_port = 0;
if ((tmp = strstr(buf, rtsp_sps))) {
tmp += strlen(rtsp_sps);
if (sscanf(tmp, "%u-%u", &s_data_port, &s_mon_port) < 1) {
0

577 CVE-2014-6427/Wireshark_1.12.0_CVE_2014_6427_epan_dissectors_packet-rtsp.c cfunc 1351
process_rtsp_reply(tvbuff_t *tvb, int offset, const guchar *data,
const guchar *status   = data;
while (status < lineend && !isspace(*status))
status++;
while (status < lineend && isspace(*status))
status++;
status_i = 0;
while (status < lineend && isdigit(*status))
status_i = status_i * 10 + *status++ - '0';
while (status < lineend && isdigit(*status))
0

578 CVE-2014-6427/Wireshark_1.12.0_CVE_2014_6427_epan_dissectors_packet-rtsp.c cppfunc 1351
process_rtsp_reply(tvbuff_t *tvb, int offset, const guchar *data,
const guchar *status   = data;
while (status < lineend && !isspace(*status))
status++;
while (status < lineend && isspace(*status))
status++;
status_i = 0;
while (status < lineend && isdigit(*status))
status_i = status_i * 10 + *status++ - '0';
while (status < lineend && isdigit(*status))
0

592 CVE-2014-6427/Wireshark_1.12.0_CVE_2014_6427_epan_dissectors_packet-rtsp.c cfunc 895
return -1;
orig_offset = offset;
rf_chan = tvb_get_guint8(tvb, offset+1);
rf_len = tvb_get_ntohs(tvb, offset+2);
return -1;
rf_chan, rf_len);
ti = proto_tree_add_protocol_format(tree, proto_rtsp, tvb,
offset, 4,
rf_chan, rf_len);
proto_tree_add_item(rtspframe_tree, hf_rtsp_magic, tvb, offset, 1, ENC_NA);
offset += 1;
proto_tree_add_item(rtspframe_tree, hf_rtsp_channel, tvb, offset, 1, ENC_NA);
offset += 1;
proto_tree_add_item(rtspframe_tree, hf_rtsp_length, tvb, offset, 2, ENC_BIG_ENDIAN);
offset += 2;
next_tvb = tvb_new_subset(tvb, offset, length_remaining, rf_len);
proto_tree_add_text(rtspframe_tree, tvb, offset, rf_len,
"Data (%u bytes)", rf_len);
offset += rf_len;
return offset - orig_offset;
tokenlen = get_token_len(line, line+5, &next_token);
(len == linelen || isspace(line[len])))
g_ascii_strncasecmp(rtsp_methods[ii], line, len) == 0 &&
gint          next_offset;
tvb_ensure_length_remaining(tvb, offset), &next_offset,
FALSE);
if (!req_resp_hdrs_do_reassembly(tvb, offset, pinfo,
return -1;
line = tvb_get_ptr(tvb, offset, first_linelen);
orig_offset = offset;
ti = proto_tree_add_item(tree, proto_rtsp, tvb, offset, -1,
content_length = -1;
while (tvb_reported_length_remaining(tvb, offset) != 0) {
linelen = tvb_find_line_end(tvb, offset,
tvb_ensure_length_remaining(tvb, offset), &next_offset,
linelen = tvb_find_line_end(tvb, offset,
FALSE);
linelen = tvb_find_line_end(tvb, offset,
return -1;
colon_offset = tvb_find_guint8(tvb, offset, linelen, ':');
line = tvb_get_ptr(tvb, offset, linelen);
is_request_or_reply = is_rtsp_request_or_reply(line, linelen, &rtsp_type);
linep = line;
c = *linep++;
if (!isascii(c))
if (iscntrl(c))
tvb_ensure_bytes_exist(tvb, offset, linelen + 1);
while (tvb_reported_length_remaining(tvb, offset) != 0) {
linelen = tvb_find_line_end(tvb, offset,
colon_offset = tvb_find_guint8(tvb, offset, linelen, ':');
line = tvb_get_ptr(tvb, offset, linelen);
is_request_or_reply = is_rtsp_request_or_reply(line, linelen, &rtsp_type);
datalen = tvb_length_remaining(tvb, offset);
reported_datalen = tvb_reported_length_remaining(tvb, offset);
datalen = content_length;
datalen = 0;
new_tvb = tvb_new_subset(tvb, offset, datalen,
proto_item_set_len(ti, offset);
if (tvb_get_guint8(tvb, offset) == RTSP_FRAMEHDR) {
datalen = 0;
proto_tree_add_text(rtsp_tree, tvb, offset,
datalen, "Data (%d bytes)",
offset += datalen;
return offset - orig_offset;
int offset = 0;
? dissect_rtspinterleaved(tvb, offset, pinfo, tree)
: dissect_rtspmessage(tvb, offset, pinfo, tree);
len = (tvb_get_guint8(tvb, offset) == RTSP_FRAMEHDR)
offset += len;
while (tvb_reported_length_remaining(tvb, offset) != 0) {
len = (tvb_get_guint8(tvb, offset) == RTSP_FRAMEHDR)
: dissect_rtspmessage(tvb, offset, pinfo, tree);
dissect_rtspmessage(tvbuff_t *tvb, int offset, packet_info *pinfo,
first_linelen = tvb_find_line_end(tvb, offset,
line = tvb_get_ptr(tvb, offset, first_linelen);
line = tvb_get_ptr(tvb, offset, first_linelen);
while (tvb_reported_length_remaining(tvb, offset) != 0) {
linelen = tvb_find_line_end(tvb, offset,
colon_offset = tvb_find_guint8(tvb, offset, linelen, ':');
line = tvb_get_ptr(tvb, offset, linelen);
is_request_or_reply = is_rtsp_request_or_reply(line, linelen, &rtsp_type);
is_rtsp_request_or_reply(const guchar *line, size_t linelen, rtsp_type_t *type)
if (linelen >= 5 && g_ascii_strncasecmp("RTSP/", line, 5) == 0) {
tokenlen = get_token_len(next_token, line+linelen, &next_token);
linep = line;
c = *linep++;
if (!isascii(c))
if (iscntrl(c))
dissect_rtsp(tvbuff_t *tvb, packet_info *pinfo, proto_tree *tree)
while (tvb_reported_length_remaining(tvb, offset) != 0) {
len = (tvb_get_guint8(tvb, offset) == RTSP_FRAMEHDR)
: dissect_rtspmessage(tvb, offset, pinfo, tree);
dissect_rtspinterleaved(tvbuff_t *tvb, int offset, packet_info *pinfo,
length_remaining = tvb_ensure_length_remaining(tvb, offset);
while (tvb_reported_length_remaining(tvb, offset) != 0) {
len = (tvb_get_guint8(tvb, offset) == RTSP_FRAMEHDR)
: dissect_rtspmessage(tvb, offset, pinfo, tree);
1

593 CVE-2014-6427/Wireshark_1.12.0_CVE_2014_6427_epan_dissectors_packet-rtsp.c cppfunc 895
return -1;
orig_offset = offset;
rf_chan = tvb_get_guint8(tvb, offset+1);
rf_len = tvb_get_ntohs(tvb, offset+2);
return -1;
rf_chan, rf_len);
ti = proto_tree_add_protocol_format(tree, proto_rtsp, tvb,
offset, 4,
rf_chan, rf_len);
proto_tree_add_item(rtspframe_tree, hf_rtsp_magic, tvb, offset, 1, ENC_NA);
offset += 1;
proto_tree_add_item(rtspframe_tree, hf_rtsp_channel, tvb, offset, 1, ENC_NA);
offset += 1;
proto_tree_add_item(rtspframe_tree, hf_rtsp_length, tvb, offset, 2, ENC_BIG_ENDIAN);
offset += 2;
next_tvb = tvb_new_subset(tvb, offset, length_remaining, rf_len);
proto_tree_add_text(rtspframe_tree, tvb, offset, rf_len,
"Data (%u bytes)", rf_len);
offset += rf_len;
return offset - orig_offset;
tokenlen = get_token_len(line, line+5, &next_token);
(len == linelen || isspace(line[len])))
g_ascii_strncasecmp(rtsp_methods[ii], line, len) == 0 &&
gint          next_offset;
tvb_ensure_length_remaining(tvb, offset), &next_offset,
FALSE);
if (!req_resp_hdrs_do_reassembly(tvb, offset, pinfo,
return -1;
line = tvb_get_ptr(tvb, offset, first_linelen);
orig_offset = offset;
ti = proto_tree_add_item(tree, proto_rtsp, tvb, offset, -1,
content_length = -1;
while (tvb_reported_length_remaining(tvb, offset) != 0) {
linelen = tvb_find_line_end(tvb, offset,
tvb_ensure_length_remaining(tvb, offset), &next_offset,
linelen = tvb_find_line_end(tvb, offset,
FALSE);
linelen = tvb_find_line_end(tvb, offset,
return -1;
colon_offset = tvb_find_guint8(tvb, offset, linelen, ':');
line = tvb_get_ptr(tvb, offset, linelen);
is_request_or_reply = is_rtsp_request_or_reply(line, linelen, &rtsp_type);
linep = line;
c = *linep++;
if (!isascii(c))
if (iscntrl(c))
tvb_ensure_bytes_exist(tvb, offset, linelen + 1);
while (tvb_reported_length_remaining(tvb, offset) != 0) {
linelen = tvb_find_line_end(tvb, offset,
colon_offset = tvb_find_guint8(tvb, offset, linelen, ':');
line = tvb_get_ptr(tvb, offset, linelen);
is_request_or_reply = is_rtsp_request_or_reply(line, linelen, &rtsp_type);
datalen = tvb_length_remaining(tvb, offset);
reported_datalen = tvb_reported_length_remaining(tvb, offset);
datalen = content_length;
datalen = 0;
new_tvb = tvb_new_subset(tvb, offset, datalen,
proto_item_set_len(ti, offset);
if (tvb_get_guint8(tvb, offset) == RTSP_FRAMEHDR) {
datalen = 0;
proto_tree_add_text(rtsp_tree, tvb, offset,
datalen, "Data (%d bytes)",
offset += datalen;
return offset - orig_offset;
int offset = 0;
? dissect_rtspinterleaved(tvb, offset, pinfo, tree)
: dissect_rtspmessage(tvb, offset, pinfo, tree);
len = (tvb_get_guint8(tvb, offset) == RTSP_FRAMEHDR)
offset += len;
while (tvb_reported_length_remaining(tvb, offset) != 0) {
len = (tvb_get_guint8(tvb, offset) == RTSP_FRAMEHDR)
: dissect_rtspmessage(tvb, offset, pinfo, tree);
dissect_rtspmessage(tvbuff_t *tvb, int offset, packet_info *pinfo,
first_linelen = tvb_find_line_end(tvb, offset,
line = tvb_get_ptr(tvb, offset, first_linelen);
line = tvb_get_ptr(tvb, offset, first_linelen);
while (tvb_reported_length_remaining(tvb, offset) != 0) {
linelen = tvb_find_line_end(tvb, offset,
colon_offset = tvb_find_guint8(tvb, offset, linelen, ':');
line = tvb_get_ptr(tvb, offset, linelen);
is_request_or_reply = is_rtsp_request_or_reply(line, linelen, &rtsp_type);
is_rtsp_request_or_reply(const guchar *line, size_t linelen, rtsp_type_t *type)
if (linelen >= 5 && g_ascii_strncasecmp("RTSP/", line, 5) == 0) {
tokenlen = get_token_len(next_token, line+linelen, &next_token);
linep = line;
c = *linep++;
if (!isascii(c))
if (iscntrl(c))
dissect_rtsp(tvbuff_t *tvb, packet_info *pinfo, proto_tree *tree)
while (tvb_reported_length_remaining(tvb, offset) != 0) {
len = (tvb_get_guint8(tvb, offset) == RTSP_FRAMEHDR)
: dissect_rtspmessage(tvb, offset, pinfo, tree);
dissect_rtspinterleaved(tvbuff_t *tvb, int offset, packet_info *pinfo,
length_remaining = tvb_ensure_length_remaining(tvb, offset);
while (tvb_reported_length_remaining(tvb, offset) != 0) {
len = (tvb_get_guint8(tvb, offset) == RTSP_FRAMEHDR)
: dissect_rtspmessage(tvb, offset, pinfo, tree);
1

13107 CVE-2014-6427/Wireshark_1.12.0_CVE_2014_6427_epan_dissectors_packet-rtsp.c Buffer_Overflow_boundedcpy 454
static gboolean is_rtsp_request_or_reply(const guchar *line, size_t linelen, rtsp_type_t *type)
const guchar *next_token;
int           tokenlen;
gchar         response_chars[4];
if (linelen >= 5 && g_ascii_strncasecmp("RTSP/", line, 5) == 0) {
*type = RTSP_REPLY;
tokenlen = get_token_len(line, line+5, &token);
if (tokenlen != 0) {
tokenlen = get_token_len(token, line+linelen, &next_token);
if (tokenlen >= 3) {
memcpy(response_chars, token, 3);
0

13145 CVE-2014-6427/Wireshark_1.12.0_CVE_2014_6427_epan_dissectors_packet-rtsp.c Buffer_Overflow_boundedcpy 454
static gboolean is_rtsp_request_or_reply(const guchar *line, size_t linelen, rtsp_type_t *type)
const guchar *next_token;
int           tokenlen;
gchar         response_chars[4];
if (linelen >= 5 && g_ascii_strncasecmp("RTSP/", line, 5) == 0) {
*type = RTSP_REPLY;
tokenlen = get_token_len(line, line+5, &next_token);
if (tokenlen != 0) {
tokenlen = get_token_len(next_token, line+linelen, &next_token);
if (tokenlen >= 3) {
memcpy(response_chars, next_token, 3);
1

13182 CVE-2014-6427/Wireshark_1.12.0_CVE_2014_6427_epan_dissectors_packet-rtsp.c Buffer_Overflow_boundedcpy 454
static gboolean is_rtsp_request_or_reply(const guchar *line, size_t linelen, rtsp_type_t *type)
const guchar *next_token;
int           tokenlen;
gchar         response_chars[4];
if (linelen >= 5 && g_ascii_strncasecmp("RTSP/", line, 5) == 0) {
*type = RTSP_REPLY;
tokenlen = get_token_len(line, line+5, &token);
if (tokenlen != 0) {
tokenlen = get_token_len(token, line+linelen, &next_token);
if (tokenlen >= 3) {
component_data = 3;
memcpy(response_chars, token, component_data);
0

13219 CVE-2014-6427/Wireshark_1.12.0_CVE_2014_6427_epan_dissectors_packet-rtsp.c Buffer_Overflow_boundedcpy 454
static gboolean is_rtsp_request_or_reply(const guchar *line, size_t linelen, rtsp_type_t *type)
const guchar *next_token;
int           tokenlen;
gchar         response_chars[4];
if (linelen >= 5 && g_ascii_strncasecmp("RTSP/", line, 5) == 0) {
*type = RTSP_REPLY;
tokenlen = get_token_len(line, line+5, &next_token);
if (tokenlen != 0) {
tokenlen = get_token_len(next_token, line+linelen, &next_token);
if (tokenlen >= 3) {
component_data = 3;
memcpy(response_chars, next_token, component_data);
1

13238 CVE-2014-6427/Wireshark_1.12.0_CVE_2014_6427_epan_dissectors_packet-rtsp.c Buffer_Overflow_boundedcpy 454
static gboolean is_rtsp_request_or_reply(const guchar *line, size_t linelen, rtsp_type_t *type)
const guchar *next_token;
int           tokenlen;
gchar         response_chars[4];
if (linelen >= 5 && g_ascii_strncasecmp("RTSP/", line, 5) == 0) {
*type = RTSP_REPLY;
tokenlen = func(&line, next_token);
int func(const guchar** line, const guchar*&next_token)
return  get_token_len(*line, *line+5, &next_token);
tokenlen = func(&line, next_token);
if (tokenlen != 0) {
tokenlen = get_token_len(next_token, line+linelen, &next_token);
if (tokenlen >= 3) {
memcpy(response_chars, next_token, 3);
1

13257 CVE-2014-6427/Wireshark_1.12.0_CVE_2014_6427_epan_dissectors_packet-rtsp.c Buffer_Overflow_boundedcpy 454
static gboolean is_rtsp_request_or_reply(const guchar *line, size_t linelen, rtsp_type_t *type)
const guchar *next_token;
int           tokenlen;
gchar         response_chars[4];
if (linelen >= 5 && g_ascii_strncasecmp("RTSP/", line, 5) == 0) {
*type = RTSP_REPLY;
tokenlen = func(&line, &token);
int func(const guchar** line, const guchar* token)
return  get_token_len(*line, *line+5, &token);
tokenlen = func(&line, &token);
if (tokenlen != 0) {
tokenlen = get_token_len(token, line+linelen, &next_token);
if (tokenlen >= 3) {
memcpy(response_chars, token, 3);
0

13319 CVE-2014-6427/Wireshark_1.12.0_CVE_2014_6427_epan_dissectors_packet-rtsp.c Buffer_Overflow_boundedcpy 454
int (*funcPtr)(const guchar* , const guchar* ) = goodSource;
static gboolean is_rtsp_request_or_reply(const guchar *line, size_t linelen, rtsp_type_t *type)
const guchar *next_token;
int           tokenlen;
gchar         response_chars[4];
if (linelen >= 5 && g_ascii_strncasecmp("RTSP/", line, 5) == 0) {
*type = RTSP_REPLY;
tokenlen = funcPtr(line, line + 5, &token);
int goodSource(const guchar* line, const guchar* token)
return  get_token_len(line, line+5, &token);
tokenlen = funcPtr(line, line + 5, &token);
if (tokenlen != 0) {
tokenlen = get_token_len(token, line+linelen, &next_token);
if (tokenlen >= 3) {
memcpy(response_chars, token, 3);
0

13345 CVE-2014-6427/Wireshark_1.12.0_CVE_2014_6427_epan_dissectors_packet-rtsp.c Buffer_Overflow_boundedcpy 454
int (*funcPtr)(const guchar* , const guchar* ) = badSource;
static gboolean is_rtsp_request_or_reply(const guchar *line, size_t linelen, rtsp_type_t *type)
const guchar *next_token;
int           tokenlen;
gchar         response_chars[4];
if (linelen >= 5 && g_ascii_strncasecmp("RTSP/", line, 5) == 0) {
*type = RTSP_REPLY;
tokenlen = funcPtr(line, next_token);
int badSource(const guchar* line, const guchar*& next_token)
return  get_token_len(line, line+5, &next_token);
tokenlen = funcPtr(line, next_token);
if (tokenlen != 0) {
tokenlen = get_token_len(next_token, line+linelen, &next_token);
if (tokenlen >= 3) {
memcpy(response_chars, next_token, 3);
1

13371 CVE-2014-6427/Wireshark_1.12.0_CVE_2014_6427_epan_dissectors_packet-rtsp.c Buffer_Overflow_boundedcpy 454
static gboolean is_rtsp_request_or_reply(const guchar *line, size_t linelen, rtsp_type_t *type)
const guchar *next_token;
int           tokenlen;
gchar         response_chars[4];
if (linelen >= 5 && g_ascii_strncasecmp("RTSP/", line, 5) == 0) {
*type = RTSP_REPLY;
tokenlen = func(line, token);
int func(const guchar* line, const guchar*& token)
return  get_token_len(line, line+5, &token);
tokenlen = func(line, token);
if (tokenlen != 0) {
tokenlen = get_token_len(token, line+linelen, &next_token);
if (tokenlen >= 3) {
memcpy(response_chars, token, 3);
0

13397 CVE-2014-6427/Wireshark_1.12.0_CVE_2014_6427_epan_dissectors_packet-rtsp.c Buffer_Overflow_boundedcpy 454
static gboolean is_rtsp_request_or_reply(const guchar *line, size_t linelen, rtsp_type_t *type)
const guchar *next_token;
int           tokenlen;
gchar         response_chars[4];
if (linelen >= 5 && g_ascii_strncasecmp("RTSP/", line, 5) == 0) {
*type = RTSP_REPLY;
tokenlen = func(line, next_token);
int func(const guchar* line, const guchar* &next_token)
return  get_token_len(line, next_token);
tokenlen = func(line, line + 5, &next_token);
if (tokenlen != 0) {
tokenlen = get_token_len(next_token, line+linelen, &next_token);
if (tokenlen >= 3) {
memcpy(response_chars, next_token, 3);
1

13435 CVE-2014-6427/Wireshark_1.12.0_CVE_2014_6427_epan_dissectors_packet-rtsp.c Buffer_Overflow_boundedcpy 454
static gboolean is_rtsp_request_or_reply(const guchar *line, size_t linelen, rtsp_type_t *type)
const guchar *next_token;
int           tokenlen;
gchar         response_chars[4];
gchar* dataType = reponse_chars;
reponse_chars = dataType;
if (linelen >= 5 && g_ascii_strncasecmp("RTSP/", line, 5) == 0) {
*type = RTSP_REPLY;
tokenlen = get_token_len(line, line+5, &token);
if (tokenlen != 0) {
tokenlen = get_token_len(token, line+linelen, &next_token);
if (tokenlen >= 3) {
memcpy(response_chars, token, 3);
0

13473 CVE-2014-6427/Wireshark_1.12.0_CVE_2014_6427_epan_dissectors_packet-rtsp.c Buffer_Overflow_boundedcpy 454
static gboolean is_rtsp_request_or_reply(const guchar *line, size_t linelen, rtsp_type_t *type)
const guchar *next_token;
int           tokenlen;
gchar         response_chars[4];
gchar* dataType = reponse_chars;
reponse_chars = dataType;
if (linelen >= 5 && g_ascii_strncasecmp("RTSP/", line, 5) == 0) {
*type = RTSP_REPLY;
tokenlen = get_token_len(line, line+5, &next_token);
if (tokenlen != 0) {
tokenlen = get_token_len(next_token, line+linelen, &next_token);
if (tokenlen >= 3) {
memcpy(response_chars, next_token, 3);
1

13985 CVE-2014-6427/Wireshark_1.12.0_CVE_2014_6427_epan_dissectors_packet-rtsp.c Buffer_Overflow_boundedcpy 454
static gboolean is_rtsp_request_or_reply(const guchar *line, size_t linelen, rtsp_type_t *type)
const guchar *next_token;
int           tokenlen;
gchar         response_chars[4];
if (linelen >= 5 && g_ascii_strncasecmp("RTSP/", line, 5) == 0) {
*type = RTSP_REPLY;
tokenlen = get_token_len(line, line+5, &token);
if (tokenlen != 0) {
tokenlen = get_token_len(token, line+linelen, &next_token);
if (tokenlen >= 3) {
memcpy(response_chars, token, 3);
0

14023 CVE-2014-6427/Wireshark_1.12.0_CVE_2014_6427_epan_dissectors_packet-rtsp.c Buffer_Overflow_boundedcpy 454
static gboolean is_rtsp_request_or_reply(const guchar *line, size_t linelen, rtsp_type_t *type)
const guchar *next_token;
int           tokenlen;
gchar         response_chars[4];
if (linelen >= 5 && g_ascii_strncasecmp("RTSP/", line, 5) == 0) {
*type = RTSP_REPLY;
tokenlen = get_token_len(line, line+5, &next_token);
if (tokenlen != 0) {
tokenlen = get_token_len(next_token, line+linelen, &next_token);
if (tokenlen >= 3) {
memcpy(response_chars, next_token, 3);
1

