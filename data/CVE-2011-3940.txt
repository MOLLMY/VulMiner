150 CVE-2011-3940/Ffmpeg_0.7.11_CVE_2011_3940_libavformat_nsvdec.c cfunc 683
static int nsv_read_packet(AVFormatContext *s, AVPacket *pkt)
memcpy(pkt, &nsv->ahead[i], sizeof(AVPacket));
nsv->ahead[i].data = NULL;
memcpy(pkt, &nsv->ahead[i], sizeof(AVPacket));
0

568 CVE-2011-3940/Ffmpeg_0.7.11_CVE_2011_3940_libavformat_nsvdec.c cfunc 320
*p++ = '\0';
p = strchr(p, quote);
p = strchr(p, '=');
0

13034 CVE-2011-3940/Ffmpeg_0.7.11_CVE_2011_3940_libavformat_nsvdec.c String_Termination_Error 326
size = avio_rl32(pb);
file_size = (uint32_t)avio_rl32(pb);
nsv->duration = duration = avio_rl32(pb);
strings_size = avio_rl32(pb);
char *strings;
char *p, *endp;
p = strings = av_mallocz(strings_size + 1);
endp = strings + strings_size;
avio_read(pb, strings, strings_size);
while (p < endp)
p = strchr(p, '=');
p = strchr(p, quote);
*p++ = '\0';
av_dict_set(&s->metadata, token, value, 0);
av_dlog(s, "NSV %d INDEX ENTRIES:\n", table_entries);
for(i=0;i<table_entries_used;i++)
nsv->nsvs_file_offset[i] = avio_rl32(pb) + size;
if(table_entries > table_entries_used && avio_rl32(pb) == MKTAG('T','O','C','2'))
nsv->nsvs_timestamps = av_malloc((unsigned)table_entries_used*sizeof(uint32_t));
for(i=0;i<table_entries_used;i++)
nsv->nsvs_timestamps[i] = avio_rl32(pb);
1

13035 CVE-2011-3940/Ffmpeg_0.7.11_CVE_2011_3940_libavformat_nsvdec.c String_Termination_Error 326
size = avio_rl32(pb);
file_size = (uint32_t)avio_rl32(pb);
nsv->duration = duration = avio_rl32(pb);
strings_size = avio_rl32(pb);
char *strings;
char *p, *endp;
p = strings = av_mallocz((size_t)strings_size + 1);
if (!p)
return AVERROR(ENOMEM);
endp = strings + strings_size;
avio_read(pb, strings, strings_size);
while (p < endp)
p = strchr(p, '=');
p = strchr(p, quote);
*p++ = '\0';
av_dict_set(&s->metadata, token, value, 0);
av_dlog(s, "NSV %d INDEX ENTRIES:\n", table_entries);
for(i=0;i<table_entries_used;i++)
nsv->nsvs_file_offset[i] = avio_rl32(pb) + size;
if (!nsv->nsvs_file_offset)
return AVERROR(ENOMEM);
if(table_entries > table_entries_used && avio_rl32(pb) == MKTAG('T','O','C','2'))
nsv->nsvs_timestamps = av_malloc((unsigned)table_entries_used*sizeof(uint32_t));
if (!nsv->nsvs_timestamps)
return AVERROR(ENOMEM);
for(i=0;i<table_entries_used;i++)
nsv->nsvs_timestamps[i] = avio_rl32(pb);
0

13620 CVE-2011-3940/Ffmpeg_0.7.11_CVE_2011_3940_libavformat_nsvdec.c String_Termination_Error 326
size = avio_rl32(pb);
file_size = (uint32_t)avio_rl32(pb);
nsv->duration = duration = avio_rl32(pb);
strings_size = avio_rl32(pb);
char *strings;
char *p, *endp;
p = func(p);
static char * func(const char * p)
p = strings = av_mallocz(strings_size + 1);
return p;
p = func(p);
endp = strings + strings_size;
avio_read(pb, strings, strings_size);
while (p < endp)
p = strchr(p, '=');
p = strchr(p, quote);
*p++ = '\0';
av_dict_set(&s->metadata, token, value, 0);
av_dlog(s, "NSV %d INDEX ENTRIES:\n", table_entries);
for(i=0;i<table_entries_used;i++)
nsv->nsvs_file_offset[i] = avio_rl32(pb) + size;
if(table_entries > table_entries_used && avio_rl32(pb) == MKTAG('T','O','C','2'))
nsv->nsvs_timestamps = av_malloc((unsigned)table_entries_used*sizeof(uint32_t));
for(i=0;i<table_entries_used;i++)
nsv->nsvs_timestamps[i] = avio_rl32(pb);
1

13621 CVE-2011-3940/Ffmpeg_0.7.11_CVE_2011_3940_libavformat_nsvdec.c String_Termination_Error 326
size = avio_rl32(pb);
file_size = (uint32_t)avio_rl32(pb);
nsv->duration = duration = avio_rl32(pb);
strings_size = avio_rl32(pb);
char *strings;
char *p, *endp;
p = func(p);
static char * func(const char * p)
p = strings = av_mallocz((size_t)strings_size + 1);
return p;
p = func(p);
if (!p)
return AVERROR(ENOMEM);
endp = strings + strings_size;
avio_read(pb, strings, strings_size);
while (p < endp)
p = strchr(p, '=');
p = strchr(p, quote);
*p++ = '\0';
av_dict_set(&s->metadata, token, value, 0);
av_dlog(s, "NSV %d INDEX ENTRIES:\n", table_entries);
for(i=0;i<table_entries_used;i++)
nsv->nsvs_file_offset[i] = avio_rl32(pb) + size;
if (!nsv->nsvs_file_offset)
return AVERROR(ENOMEM);
if(table_entries > table_entries_used && avio_rl32(pb) == MKTAG('T','O','C','2'))
nsv->nsvs_timestamps = av_malloc((unsigned)table_entries_used*sizeof(uint32_t));
if (!nsv->nsvs_timestamps)
return AVERROR(ENOMEM);
for(i=0;i<table_entries_used;i++)
nsv->nsvs_timestamps[i] = avio_rl32(pb);
0

13622 CVE-2011-3940/Ffmpeg_0.7.11_CVE_2011_3940_libavformat_nsvdec.c String_Termination_Error 326
size = avio_rl32(pb);
file_size = (uint32_t)avio_rl32(pb);
nsv->duration = duration = avio_rl32(pb);
strings_size = avio_rl32(pb);
char *strings;
char *p, *endp;
p = func(&p);
static char * func(char * * ptr)
char * p = *ptr;
p = strings = av_mallocz(strings_size + 1);
return p;
p = func(&p);
endp = strings + strings_size;
avio_read(pb, strings, strings_size);
while (p < endp)
p = strchr(p, '=');
p = strchr(p, quote);
*p++ = '\0';
av_dict_set(&s->metadata, token, value, 0);
av_dlog(s, "NSV %d INDEX ENTRIES:\n", table_entries);
for(i=0;i<table_entries_used;i++)
nsv->nsvs_file_offset[i] = avio_rl32(pb) + size;
if(table_entries > table_entries_used && avio_rl32(pb) == MKTAG('T','O','C','2'))
nsv->nsvs_timestamps = av_malloc((unsigned)table_entries_used*sizeof(uint32_t));
for(i=0;i<table_entries_used;i++)
nsv->nsvs_timestamps[i] = avio_rl32(pb);
1

13623 CVE-2011-3940/Ffmpeg_0.7.11_CVE_2011_3940_libavformat_nsvdec.c String_Termination_Error 326
size = avio_rl32(pb);
file_size = (uint32_t)avio_rl32(pb);
nsv->duration = duration = avio_rl32(pb);
strings_size = avio_rl32(pb);
char *strings;
char *p, *endp;
p = func(&p);
static char * func(char * * ptr)
char * p = *ptr;
p = strings = av_mallocz((size_t)strings_size + 1);
return p;
p = func(&p);
if (!p)
return AVERROR(ENOMEM);
endp = strings + strings_size;
avio_read(pb, strings, strings_size);
while (p < endp)
p = strchr(p, '=');
p = strchr(p, quote);
*p++ = '\0';
av_dict_set(&s->metadata, token, value, 0);
av_dlog(s, "NSV %d INDEX ENTRIES:\n", table_entries);
for(i=0;i<table_entries_used;i++)
nsv->nsvs_file_offset[i] = avio_rl32(pb) + size;
if (!nsv->nsvs_file_offset)
return AVERROR(ENOMEM);
if(table_entries > table_entries_used && avio_rl32(pb) == MKTAG('T','O','C','2'))
nsv->nsvs_timestamps = av_malloc((unsigned)table_entries_used*sizeof(uint32_t));
if (!nsv->nsvs_timestamps)
return AVERROR(ENOMEM);
for(i=0;i<table_entries_used;i++)
nsv->nsvs_timestamps[i] = avio_rl32(pb);
0

13624 CVE-2011-3940/Ffmpeg_0.7.11_CVE_2011_3940_libavformat_nsvdec.c String_Termination_Error 326
size = avio_rl32(pb);
file_size = (uint32_t)avio_rl32(pb);
nsv->duration = duration = avio_rl32(pb);
strings_size = avio_rl32(pb);
char *strings;
char *p, *endp;
void (*funcPtr) (char *) = badSource;
funcPtr(p)
void badSource(char * p)
p = strings = av_mallocz(strings_size + 1);
endp = strings + strings_size;
avio_read(pb, strings, strings_size);
while (p < endp)
p = strchr(p, '=');
p = strchr(p, quote);
*p++ = '\0';
av_dict_set(&s->metadata, token, value, 0);
av_dlog(s, "NSV %d INDEX ENTRIES:\n", table_entries);
for(i=0;i<table_entries_used;i++)
nsv->nsvs_file_offset[i] = avio_rl32(pb) + size;
if(table_entries > table_entries_used && avio_rl32(pb) == MKTAG('T','O','C','2'))
nsv->nsvs_timestamps = av_malloc((unsigned)table_entries_used*sizeof(uint32_t));
for(i=0;i<table_entries_used;i++)
nsv->nsvs_timestamps[i] = avio_rl32(pb);
1

13625 CVE-2011-3940/Ffmpeg_0.7.11_CVE_2011_3940_libavformat_nsvdec.c String_Termination_Error 326
size = avio_rl32(pb);
file_size = (uint32_t)avio_rl32(pb);
nsv->duration = duration = avio_rl32(pb);
strings_size = avio_rl32(pb);
char *strings;
char *p, *endp;
void (*funcPtr) (char *) = badSource;
funcPtr(p)
void badSource(char * p)
p = strings = av_mallocz((size_t)strings_size + 1);
if (!p)
return AVERROR(ENOMEM);
endp = strings + strings_size;
avio_read(pb, strings, strings_size);
while (p < endp)
p = strchr(p, '=');
p = strchr(p, quote);
*p++ = '\0';
av_dict_set(&s->metadata, token, value, 0);
av_dlog(s, "NSV %d INDEX ENTRIES:\n", table_entries);
for(i=0;i<table_entries_used;i++)
nsv->nsvs_file_offset[i] = avio_rl32(pb) + size;
if (!nsv->nsvs_file_offset)
return AVERROR(ENOMEM);
if(table_entries > table_entries_used && avio_rl32(pb) == MKTAG('T','O','C','2'))
nsv->nsvs_timestamps = av_malloc((unsigned)table_entries_used*sizeof(uint32_t));
if (!nsv->nsvs_timestamps)
return AVERROR(ENOMEM);
for(i=0;i<table_entries_used;i++)
nsv->nsvs_timestamps[i] = avio_rl32(pb);
0

13626 CVE-2011-3940/Ffmpeg_0.7.11_CVE_2011_3940_libavformat_nsvdec.c String_Termination_Error 326
size = avio_rl32(pb);
file_size = (uint32_t)avio_rl32(pb);
nsv->duration = duration = avio_rl32(pb);
strings_size = avio_rl32(pb);
char *strings;
char *p, *endp;
p = strings = av_mallocz(strings_size + 1);
char * dataCopy = p;
char * p = dataCopy;
endp = strings + strings_size;
avio_read(pb, strings, strings_size);
while (p < endp)
p = strchr(p, '=');
p = strchr(p, quote);
*p++ = '\0';
av_dict_set(&s->metadata, token, value, 0);
av_dlog(s, "NSV %d INDEX ENTRIES:\n", table_entries);
for(i=0;i<table_entries_used;i++)
nsv->nsvs_file_offset[i] = avio_rl32(pb) + size;
if(table_entries > table_entries_used && avio_rl32(pb) == MKTAG('T','O','C','2'))
nsv->nsvs_timestamps = av_malloc((unsigned)table_entries_used*sizeof(uint32_t));
for(i=0;i<table_entries_used;i++)
nsv->nsvs_timestamps[i] = avio_rl32(pb);
1

13627 CVE-2011-3940/Ffmpeg_0.7.11_CVE_2011_3940_libavformat_nsvdec.c String_Termination_Error 326
size = avio_rl32(pb);
file_size = (uint32_t)avio_rl32(pb);
nsv->duration = duration = avio_rl32(pb);
strings_size = avio_rl32(pb);
char *strings;
char *p, *endp;
p = strings = av_mallocz((size_t)strings_size + 1);
char * dataCopy = p;
char * p = dataCopy;
if (!p)
return AVERROR(ENOMEM);
endp = strings + strings_size;
avio_read(pb, strings, strings_size);
while (p < endp)
p = strchr(p, '=');
p = strchr(p, quote);
*p++ = '\0';
av_dict_set(&s->metadata, token, value, 0);
av_dlog(s, "NSV %d INDEX ENTRIES:\n", table_entries);
for(i=0;i<table_entries_used;i++)
nsv->nsvs_file_offset[i] = avio_rl32(pb) + size;
if (!nsv->nsvs_file_offset)
return AVERROR(ENOMEM);
if(table_entries > table_entries_used && avio_rl32(pb) == MKTAG('T','O','C','2'))
nsv->nsvs_timestamps = av_malloc((unsigned)table_entries_used*sizeof(uint32_t));
if (!nsv->nsvs_timestamps)
return AVERROR(ENOMEM);
for(i=0;i<table_entries_used;i++)
nsv->nsvs_timestamps[i] = avio_rl32(pb);
0

13628 CVE-2011-3940/Ffmpeg_0.7.11_CVE_2011_3940_libavformat_nsvdec.c String_Termination_Error 326
size = avio_rl32(pb);
file_size = (uint32_t)avio_rl32(pb);
nsv->duration = duration = avio_rl32(pb);
strings_size = avio_rl32(pb);
char *strings;
char *p, *endp;
len = strings_size + 1;
p = strings = av_mallocz(len);
endp = strings + strings_size;
avio_read(pb, strings, strings_size);
while (p < endp)
p = strchr(p, '=');
p = strchr(p, quote);
*p++ = '\0';
av_dict_set(&s->metadata, token, value, 0);
av_dlog(s, "NSV %d INDEX ENTRIES:\n", table_entries);
for(i=0;i<table_entries_used;i++)
nsv->nsvs_file_offset[i] = avio_rl32(pb) + size;
if(table_entries > table_entries_used && avio_rl32(pb) == MKTAG('T','O','C','2'))
nsv->nsvs_timestamps = av_malloc((unsigned)table_entries_used*sizeof(uint32_t));
for(i=0;i<table_entries_used;i++)
nsv->nsvs_timestamps[i] = avio_rl32(pb);
1

13629 CVE-2011-3940/Ffmpeg_0.7.11_CVE_2011_3940_libavformat_nsvdec.c String_Termination_Error 326
size = avio_rl32(pb);
file_size = (uint32_t)avio_rl32(pb);
nsv->duration = duration = avio_rl32(pb);
strings_size = avio_rl32(pb);
char *strings;
char *p, *endp;
len = strings_size + 1;
p = strings = av_mallocz((size_t)len);
if (!p)
return AVERROR(ENOMEM);
endp = strings + strings_size;
avio_read(pb, strings, strings_size);
while (p < endp)
p = strchr(p, '=');
p = strchr(p, quote);
*p++ = '\0';
av_dict_set(&s->metadata, token, value, 0);
av_dlog(s, "NSV %d INDEX ENTRIES:\n", table_entries);
for(i=0;i<table_entries_used;i++)
nsv->nsvs_file_offset[i] = avio_rl32(pb) + size;
if (!nsv->nsvs_file_offset)
return AVERROR(ENOMEM);
if(table_entries > table_entries_used && avio_rl32(pb) == MKTAG('T','O','C','2'))
nsv->nsvs_timestamps = av_malloc((unsigned)table_entries_used*sizeof(uint32_t));
if (!nsv->nsvs_timestamps)
return AVERROR(ENOMEM);
for(i=0;i<table_entries_used;i++)
nsv->nsvs_timestamps[i] = avio_rl32(pb);
0

13630 CVE-2011-3940/Ffmpeg_0.7.11_CVE_2011_3940_libavformat_nsvdec.c String_Termination_Error 326
file_size = (uint32_t)avio_rl32(pb);
size = avio_rl32(pb);
nsv->duration = duration = avio_rl32(pb);
strings_size = avio_rl32(pb);
char *strings;
char *p, *endp;
p = strings = av_mallocz(strings_size + 1);
endp = strings + strings_size;
avio_read(pb, strings, strings_size);
while (p < endp)
p = strchr(p, '=');
p = strchr(p, quote);
*p++ = '\0';
av_dict_set(&s->metadata, token, value, 0);
av_dlog(s, "NSV %d INDEX ENTRIES:\n", table_entries);
for(i=0;i<table_entries_used;i++)
nsv->nsvs_file_offset[i] = avio_rl32(pb) + size;
if(table_entries > table_entries_used && avio_rl32(pb) == MKTAG('T','O','C','2'))
nsv->nsvs_timestamps = av_malloc((unsigned)table_entries_used*sizeof(uint32_t));
for(i=0;i<table_entries_used;i++)
nsv->nsvs_timestamps[i] = avio_rl32(pb);
1

13631 CVE-2011-3940/Ffmpeg_0.7.11_CVE_2011_3940_libavformat_nsvdec.c String_Termination_Error 326
file_size = (uint32_t)avio_rl32(pb);
size = avio_rl32(pb);
nsv->duration = duration = avio_rl32(pb);
strings_size = avio_rl32(pb);
char *strings;
char *p, *endp;
p = strings = av_mallocz((size_t)strings_size + 1);
if (!p)
return AVERROR(ENOMEM);
endp = strings + strings_size;
avio_read(pb, strings, strings_size);
while (p < endp)
p = strchr(p, '=');
p = strchr(p, quote);
*p++ = '\0';
av_dict_set(&s->metadata, token, value, 0);
av_dlog(s, "NSV %d INDEX ENTRIES:\n", table_entries);
for(i=0;i<table_entries_used;i++)
nsv->nsvs_file_offset[i] = avio_rl32(pb) + size;
if (!nsv->nsvs_file_offset)
return AVERROR(ENOMEM);
if(table_entries > table_entries_used && avio_rl32(pb) == MKTAG('T','O','C','2'))
nsv->nsvs_timestamps = av_malloc((unsigned)table_entries_used*sizeof(uint32_t));
if (!nsv->nsvs_timestamps)
return AVERROR(ENOMEM);
for(i=0;i<table_entries_used;i++)
nsv->nsvs_timestamps[i] = avio_rl32(pb);
0

13632 CVE-2011-3940/Ffmpeg_0.7.11_CVE_2011_3940_libavformat_nsvdec.c String_Termination_Error 326
size = avio_rl32(pb);
file_size = (uint32_t)avio_rl32(pb);
nsv->duration = duration = avio_rl32(pb);
strings_size = avio_rl32(pb);
char *strings;
char *p, *endp;
char * dataArray[5];
dataArray[2] = p;
p = badSource(dataArray);
void badSource(dataArray)
char * p = dataArray[2];
p = strings = av_mallocz(strings_size + 1);
return p
endp = strings + strings_size;
avio_read(pb, strings, strings_size);
while (p < endp)
p = strchr(p, '=');
p = strchr(p, quote);
*p++ = '\0';
av_dict_set(&s->metadata, token, value, 0);
av_dlog(s, "NSV %d INDEX ENTRIES:\n", table_entries);
for(i=0;i<table_entries_used;i++)
nsv->nsvs_file_offset[i] = avio_rl32(pb) + size;
if(table_entries > table_entries_used && avio_rl32(pb) == MKTAG('T','O','C','2'))
nsv->nsvs_timestamps = av_malloc((unsigned)table_entries_used*sizeof(uint32_t));
for(i=0;i<table_entries_used;i++)
nsv->nsvs_timestamps[i] = avio_rl32(pb);
1

13633 CVE-2011-3940/Ffmpeg_0.7.11_CVE_2011_3940_libavformat_nsvdec.c String_Termination_Error 326
size = avio_rl32(pb);
file_size = (uint32_t)avio_rl32(pb);
nsv->duration = duration = avio_rl32(pb);
strings_size = avio_rl32(pb);
char *strings;
char *p, *endp;
char * dataArray[5];
dataArray[2] = p;
p = badSource(dataArray);
void badSource(dataArray)
char * p = dataArray[2];
p = strings = av_mallocz((size_t)strings_size + 1);
return p
if (!p)
return AVERROR(ENOMEM);
endp = strings + strings_size;
avio_read(pb, strings, strings_size);
while (p < endp)
p = strchr(p, '=');
p = strchr(p, quote);
*p++ = '\0';
av_dict_set(&s->metadata, token, value, 0);
av_dlog(s, "NSV %d INDEX ENTRIES:\n", table_entries);
for(i=0;i<table_entries_used;i++)
nsv->nsvs_file_offset[i] = avio_rl32(pb) + size;
if (!nsv->nsvs_file_offset)
return AVERROR(ENOMEM);
if(table_entries > table_entries_used && avio_rl32(pb) == MKTAG('T','O','C','2'))
nsv->nsvs_timestamps = av_malloc((unsigned)table_entries_used*sizeof(uint32_t));
if (!nsv->nsvs_timestamps)
return AVERROR(ENOMEM);
for(i=0;i<table_entries_used;i++)
nsv->nsvs_timestamps[i] = avio_rl32(pb);
0

13634 CVE-2011-3940/Ffmpeg_0.7.11_CVE_2011_3940_libavformat_nsvdec.c String_Termination_Error 326
size = avio_rl32(pb);
file_size = (uint32_t)avio_rl32(pb);
nsv->duration = duration = avio_rl32(pb);
strings_size = avio_rl32(pb);
char *strings;
char *p, *endp;
unionType myUnion;
p = strings = av_mallocz(strings_size + 1);
myUnion.unionFirst = p;
char * p = myUnion.unionSecond;
endp = strings + strings_size;
avio_read(pb, strings, strings_size);
while (p < endp)
p = strchr(p, '=');
p = strchr(p, quote);
*p++ = '\0';
av_dict_set(&s->metadata, token, value, 0);
av_dlog(s, "NSV %d INDEX ENTRIES:\n", table_entries);
for(i=0;i<table_entries_used;i++)
nsv->nsvs_file_offset[i] = avio_rl32(pb) + size;
if(table_entries > table_entries_used && avio_rl32(pb) == MKTAG('T','O','C','2'))
nsv->nsvs_timestamps = av_malloc((unsigned)table_entries_used*sizeof(uint32_t));
for(i=0;i<table_entries_used;i++)
nsv->nsvs_timestamps[i] = avio_rl32(pb);
1

13635 CVE-2011-3940/Ffmpeg_0.7.11_CVE_2011_3940_libavformat_nsvdec.c String_Termination_Error 326
size = avio_rl32(pb);
file_size = (uint32_t)avio_rl32(pb);
nsv->duration = duration = avio_rl32(pb);
strings_size = avio_rl32(pb);
char *strings;
char *p, *endp;
unionType myUnion;
p = strings = av_mallocz((size_t)strings_size + 1);
myUnion.unionFirst = p;
char * p = myUnion.unionSecond;
if (!p)
return AVERROR(ENOMEM);
endp = strings + strings_size;
avio_read(pb, strings, strings_size);
while (p < endp)
p = strchr(p, '=');
p = strchr(p, quote);
*p++ = '\0';
av_dict_set(&s->metadata, token, value, 0);
av_dlog(s, "NSV %d INDEX ENTRIES:\n", table_entries);
for(i=0;i<table_entries_used;i++)
nsv->nsvs_file_offset[i] = avio_rl32(pb) + size;
if (!nsv->nsvs_file_offset)
return AVERROR(ENOMEM);
if(table_entries > table_entries_used && avio_rl32(pb) == MKTAG('T','O','C','2'))
nsv->nsvs_timestamps = av_malloc((unsigned)table_entries_used*sizeof(uint32_t));
if (!nsv->nsvs_timestamps)
return AVERROR(ENOMEM);
for(i=0;i<table_entries_used;i++)
nsv->nsvs_timestamps[i] = avio_rl32(pb);
0

13636 CVE-2011-3940/Ffmpeg_0.7.11_CVE_2011_3940_libavformat_nsvdec.c String_Termination_Error 326
size = avio_rl32(pb);
file_size = (uint32_t)avio_rl32(pb);
nsv->duration = duration = avio_rl32(pb);
strings_size = avio_rl32(pb);
char *strings;
char *p, *endp;
structType myStruct;
myStruct.structFirst = p;
p = badSource(myStruct);
void badSource(structType myStruct)
char * p =myStruct.structFirst;
p = strings = av_mallocz(strings_size + 1);
return p
endp = strings + strings_size;
avio_read(pb, strings, strings_size);
while (p < endp)
p = strchr(p, '=');
p = strchr(p, quote);
*p++ = '\0';
av_dict_set(&s->metadata, token, value, 0);
av_dlog(s, "NSV %d INDEX ENTRIES:\n", table_entries);
for(i=0;i<table_entries_used;i++)
nsv->nsvs_file_offset[i] = avio_rl32(pb) + size;
if(table_entries > table_entries_used && avio_rl32(pb) == MKTAG('T','O','C','2'))
nsv->nsvs_timestamps = av_malloc((unsigned)table_entries_used*sizeof(uint32_t));
for(i=0;i<table_entries_used;i++)
nsv->nsvs_timestamps[i] = avio_rl32(pb);
1

13637 CVE-2011-3940/Ffmpeg_0.7.11_CVE_2011_3940_libavformat_nsvdec.c String_Termination_Error 326
size = avio_rl32(pb);
file_size = (uint32_t)avio_rl32(pb);
nsv->duration = duration = avio_rl32(pb);
strings_size = avio_rl32(pb);
char *strings;
char *p, *endp;
structType myStruct;
myStruct.structFirst = p;
p = badSource(myStruct);
void badSource(structType myStruct)
char * p =myStruct.structFirst;
p = strings = av_mallocz((size_t)strings_size + 1);
return p
if (!p)
return AVERROR(ENOMEM);
endp = strings + strings_size;
avio_read(pb, strings, strings_size);
while (p < endp)
p = strchr(p, '=');
p = strchr(p, quote);
*p++ = '\0';
av_dict_set(&s->metadata, token, value, 0);
av_dlog(s, "NSV %d INDEX ENTRIES:\n", table_entries);
for(i=0;i<table_entries_used;i++)
nsv->nsvs_file_offset[i] = avio_rl32(pb) + size;
if (!nsv->nsvs_file_offset)
return AVERROR(ENOMEM);
if(table_entries > table_entries_used && avio_rl32(pb) == MKTAG('T','O','C','2'))
nsv->nsvs_timestamps = av_malloc((unsigned)table_entries_used*sizeof(uint32_t));
if (!nsv->nsvs_timestamps)
return AVERROR(ENOMEM);
for(i=0;i<table_entries_used;i++)
nsv->nsvs_timestamps[i] = avio_rl32(pb);
0

