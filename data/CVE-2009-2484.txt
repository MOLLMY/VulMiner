8 CVE-2009-2484/vlc_media_player_0.9.9_CVE-2009-2484_smb.c cfunc 241
static int Open( vlc_object_t *p_this )
char         *psz_path, *psz_uri;
psz_path = strchr( p_access->psz_path, '/' );
char *psz_tmp = strdup( p_access->psz_path );
psz_tmp[ psz_path - p_access->psz_path ] = 0;
psz_path = p_access->psz_path;
psz_parser = strchr( psz_tmp, '@' );
*psz_parser = 0;
psz_path = p_access->psz_path + (psz_parser - psz_tmp) + 1;
Win32AddConnection( p_access, psz_path, psz_user, psz_pwd, psz_domain);
i_ret = asprintf( &psz_uri, "
free( psz_uri );
strlcpy( psz_server, psz_path, sizeof( psz_server ) );
psz_parser = strchr( psz_path, '/' );
i_ret = asprintf( &psz_uri, "
free( psz_uri );
static void Win32AddConnection( access_t *p_access, char *psz_path,
i_ret = asprintf( &psz_uri, "
free( psz_uri );
0

9 CVE-2009-2484/vlc_media_player_0.9.9_CVE-2009-2484_smb.c cppfunc 241
static int Open( vlc_object_t *p_this )
char         *psz_path, *psz_uri;
psz_path = strchr( p_access->psz_path, '/' );
char *psz_tmp = strdup( p_access->psz_path );
psz_tmp[ psz_path - p_access->psz_path ] = 0;
psz_path = p_access->psz_path;
psz_parser = strchr( psz_tmp, '@' );
*psz_parser = 0;
psz_path = p_access->psz_path + (psz_parser - psz_tmp) + 1;
Win32AddConnection( p_access, psz_path, psz_user, psz_pwd, psz_domain);
i_ret = asprintf( &psz_uri, "
free( psz_uri );
strlcpy( psz_server, psz_path, sizeof( psz_server ) );
psz_parser = strchr( psz_path, '/' );
i_ret = asprintf( &psz_uri, "
free( psz_uri );
static void Win32AddConnection( access_t *p_access, char *psz_path,
i_ret = asprintf( &psz_uri, "
free( psz_uri );
0

80 CVE-2009-2484/vlc_media_player_0.9.9_CVE-2009-2484_smb.c cfunc 323
static void Close( vlc_object_t *p_this )
access_sys_t *p_sys = p_access->p_sys;
p_sys->p_smb->close( p_sys->p_smb, p_sys->p_file );
smbc_free_context( p_sys->p_smb, 1 );
free( p_sys );
0

81 CVE-2009-2484/vlc_media_player_0.9.9_CVE-2009-2484_smb.c cppfunc 323
static void Close( vlc_object_t *p_this )
access_sys_t *p_sys = p_access->p_sys;
p_sys->p_smb->close( p_sys->p_smb, p_sys->p_file );
smbc_free_context( p_sys->p_smb, 1 );
free( p_sys );
0

102 CVE-2009-2484/vlc_media_player_0.9.9_CVE-2009-2484_smb.c cfunc 196
static int Open( vlc_object_t *p_this )
access_t     *p_access = (access_t*)p_this;
char         *psz_user = 0, *psz_pwd = 0, *psz_domain = 0;
psz_path = strchr( p_access->psz_path, '/' );
char *psz_tmp = strdup( p_access->psz_path );
psz_tmp[ psz_path - p_access->psz_path ] = 0;
psz_parser = strchr( psz_tmp, '@' );
psz_parser = strchr( psz_tmp, ':' );
psz_parser = strchr( psz_tmp, ';' );
psz_domain = strdup( psz_tmp );
if( !psz_user ) psz_user = var_CreateGetString( p_access, "smb-user" );
if( !psz_pwd ) psz_pwd = var_CreateGetString( p_access, "smb-pwd" );
if( !psz_domain ) psz_domain = var_CreateGetString( p_access, "smb-domain" );
if( psz_domain && !*psz_domain ) { free( psz_domain ); psz_domain = 0; }
0

103 CVE-2009-2484/vlc_media_player_0.9.9_CVE-2009-2484_smb.c cppfunc 196
static int Open( vlc_object_t *p_this )
access_t     *p_access = (access_t*)p_this;
char         *psz_user = 0, *psz_pwd = 0, *psz_domain = 0;
psz_path = strchr( p_access->psz_path, '/' );
char *psz_tmp = strdup( p_access->psz_path );
psz_tmp[ psz_path - p_access->psz_path ] = 0;
psz_parser = strchr( psz_tmp, '@' );
psz_parser = strchr( psz_tmp, ':' );
psz_parser = strchr( psz_tmp, ';' );
psz_domain = strdup( psz_tmp );
if( !psz_user ) psz_user = var_CreateGetString( p_access, "smb-user" );
if( !psz_pwd ) psz_pwd = var_CreateGetString( p_access, "smb-pwd" );
if( !psz_domain ) psz_domain = var_CreateGetString( p_access, "smb-domain" );
if( psz_domain && !*psz_domain ) { free( psz_domain ); psz_domain = 0; }
0

104 CVE-2009-2484/vlc_media_player_0.9.9_CVE-2009-2484_smb.c cfunc 194
static int Open( vlc_object_t *p_this )
access_t     *p_access = (access_t*)p_this;
char         *psz_user = 0, *psz_pwd = 0, *psz_domain = 0;
psz_path = strchr( p_access->psz_path, '/' );
char *psz_tmp = strdup( p_access->psz_path );
psz_tmp[ psz_path - p_access->psz_path ] = 0;
psz_parser = strchr( psz_tmp, '@' );
psz_parser = strchr( psz_tmp, ':' );
psz_pwd = strdup( psz_parser+1 );
if( !psz_user ) psz_user = var_CreateGetString( p_access, "smb-user" );
if( !psz_pwd ) psz_pwd = var_CreateGetString( p_access, "smb-pwd" );
if( psz_pwd && !*psz_pwd ) { free( psz_pwd ); psz_pwd = 0; }
0

105 CVE-2009-2484/vlc_media_player_0.9.9_CVE-2009-2484_smb.c cppfunc 194
static int Open( vlc_object_t *p_this )
access_t     *p_access = (access_t*)p_this;
char         *psz_user = 0, *psz_pwd = 0, *psz_domain = 0;
psz_path = strchr( p_access->psz_path, '/' );
char *psz_tmp = strdup( p_access->psz_path );
psz_tmp[ psz_path - p_access->psz_path ] = 0;
psz_parser = strchr( psz_tmp, '@' );
psz_parser = strchr( psz_tmp, ':' );
psz_pwd = strdup( psz_parser+1 );
if( !psz_user ) psz_user = var_CreateGetString( p_access, "smb-user" );
if( !psz_pwd ) psz_pwd = var_CreateGetString( p_access, "smb-pwd" );
if( psz_pwd && !*psz_pwd ) { free( psz_pwd ); psz_pwd = 0; }
0

106 CVE-2009-2484/vlc_media_player_0.9.9_CVE-2009-2484_smb.c cfunc 192
static int Open( vlc_object_t *p_this )
access_t     *p_access = (access_t*)p_this;
char         *psz_user = 0, *psz_pwd = 0, *psz_domain = 0;
psz_path = strchr( p_access->psz_path, '/' );
char *psz_tmp = strdup( p_access->psz_path );
psz_tmp[ psz_path - p_access->psz_path ] = 0;
psz_parser = strchr( psz_tmp, '@' );
psz_parser = strchr( psz_tmp, ':' );
psz_parser = strchr( psz_tmp, ';' );
*psz_parser = 0; psz_parser++;
else psz_parser = psz_tmp;
psz_user = strdup( psz_parser );
if( !psz_user ) psz_user = var_CreateGetString( p_access, "smb-user" );
if( psz_user && !*psz_user ) { free( psz_user ); psz_user = 0; }
0

107 CVE-2009-2484/vlc_media_player_0.9.9_CVE-2009-2484_smb.c cppfunc 192
static int Open( vlc_object_t *p_this )
access_t     *p_access = (access_t*)p_this;
char         *psz_user = 0, *psz_pwd = 0, *psz_domain = 0;
psz_path = strchr( p_access->psz_path, '/' );
char *psz_tmp = strdup( p_access->psz_path );
psz_tmp[ psz_path - p_access->psz_path ] = 0;
psz_parser = strchr( psz_tmp, '@' );
psz_parser = strchr( psz_tmp, ':' );
psz_parser = strchr( psz_tmp, ';' );
*psz_parser = 0; psz_parser++;
else psz_parser = psz_tmp;
psz_user = strdup( psz_parser );
if( !psz_user ) psz_user = var_CreateGetString( p_access, "smb-user" );
if( psz_user && !*psz_user ) { free( psz_user ); psz_user = 0; }
0

110 CVE-2009-2484/vlc_media_player_0.9.9_CVE-2009-2484_smb.c cfunc 214
static int Open( vlc_object_t *p_this )
access_t     *p_access = (access_t*)p_this;
char         *psz_user = 0, *psz_pwd = 0, *psz_domain = 0;
psz_path = strchr( p_access->psz_path, '/' );
char *psz_tmp = strdup( p_access->psz_path );
psz_tmp[ psz_path - p_access->psz_path ] = 0;
psz_parser = strchr( psz_tmp, '@' );
psz_parser = strchr( psz_tmp, ':' );
psz_parser = strchr( psz_tmp, ';' );
psz_domain = strdup( psz_tmp );
if( !psz_user ) psz_user = var_CreateGetString( p_access, "smb-user" );
if( !psz_pwd ) psz_pwd = var_CreateGetString( p_access, "smb-pwd" );
if( !psz_domain ) psz_domain = var_CreateGetString( p_access, "smb-domain" );
if( psz_domain && !*psz_domain ) { free( psz_domain ); psz_domain = 0; }
Win32AddConnection( p_access, psz_path, psz_user, psz_pwd, psz_domain);
free( psz_domain );
char *psz_domain )
VLC_UNUSED( psz_domain );
free( psz_domain );
0

111 CVE-2009-2484/vlc_media_player_0.9.9_CVE-2009-2484_smb.c cppfunc 214
static int Open( vlc_object_t *p_this )
access_t     *p_access = (access_t*)p_this;
char         *psz_user = 0, *psz_pwd = 0, *psz_domain = 0;
psz_path = strchr( p_access->psz_path, '/' );
char *psz_tmp = strdup( p_access->psz_path );
psz_tmp[ psz_path - p_access->psz_path ] = 0;
psz_parser = strchr( psz_tmp, '@' );
psz_parser = strchr( psz_tmp, ':' );
psz_parser = strchr( psz_tmp, ';' );
psz_domain = strdup( psz_tmp );
if( !psz_user ) psz_user = var_CreateGetString( p_access, "smb-user" );
if( !psz_pwd ) psz_pwd = var_CreateGetString( p_access, "smb-pwd" );
if( !psz_domain ) psz_domain = var_CreateGetString( p_access, "smb-domain" );
if( psz_domain && !*psz_domain ) { free( psz_domain ); psz_domain = 0; }
Win32AddConnection( p_access, psz_path, psz_user, psz_pwd, psz_domain);
free( psz_domain );
char *psz_domain )
VLC_UNUSED( psz_domain );
free( psz_domain );
0

113 CVE-2009-2484/vlc_media_player_0.9.9_CVE-2009-2484_smb.c cfunc 212
static int Open( vlc_object_t *p_this )
access_t     *p_access = (access_t*)p_this;
char         *psz_user = 0, *psz_pwd = 0, *psz_domain = 0;
psz_path = strchr( p_access->psz_path, '/' );
char *psz_tmp = strdup( p_access->psz_path );
psz_tmp[ psz_path - p_access->psz_path ] = 0;
psz_parser = strchr( psz_tmp, '@' );
psz_parser = strchr( psz_tmp, ':' );
psz_parser = strchr( psz_tmp, ';' );
*psz_parser = 0; psz_parser++;
else psz_parser = psz_tmp;
psz_user = strdup( psz_parser );
if( !psz_user ) psz_user = var_CreateGetString( p_access, "smb-user" );
if( psz_user && !*psz_user ) { free( psz_user ); psz_user = 0; }
Win32AddConnection( p_access, psz_path, psz_user, psz_pwd, psz_domain);
free( psz_user );
char *psz_user, char *psz_pwd,
free( psz_user );
i_result = OurWNetAddConnection2( &net_resource, psz_pwd, psz_user, 0 );
free( psz_user );
0

114 CVE-2009-2484/vlc_media_player_0.9.9_CVE-2009-2484_smb.c cppfunc 212
static int Open( vlc_object_t *p_this )
access_t     *p_access = (access_t*)p_this;
char         *psz_user = 0, *psz_pwd = 0, *psz_domain = 0;
psz_path = strchr( p_access->psz_path, '/' );
char *psz_tmp = strdup( p_access->psz_path );
psz_tmp[ psz_path - p_access->psz_path ] = 0;
psz_parser = strchr( psz_tmp, '@' );
psz_parser = strchr( psz_tmp, ':' );
psz_parser = strchr( psz_tmp, ';' );
*psz_parser = 0; psz_parser++;
else psz_parser = psz_tmp;
psz_user = strdup( psz_parser );
if( !psz_user ) psz_user = var_CreateGetString( p_access, "smb-user" );
if( psz_user && !*psz_user ) { free( psz_user ); psz_user = 0; }
Win32AddConnection( p_access, psz_path, psz_user, psz_pwd, psz_domain);
free( psz_user );
char *psz_user, char *psz_pwd,
free( psz_user );
i_result = OurWNetAddConnection2( &net_resource, psz_pwd, psz_user, 0 );
free( psz_user );
0

115 CVE-2009-2484/vlc_media_player_0.9.9_CVE-2009-2484_smb.c cfunc 213
static int Open( vlc_object_t *p_this )
access_t     *p_access = (access_t*)p_this;
char         *psz_user = 0, *psz_pwd = 0, *psz_domain = 0;
psz_path = strchr( p_access->psz_path, '/' );
char *psz_tmp = strdup( p_access->psz_path );
psz_tmp[ psz_path - p_access->psz_path ] = 0;
psz_parser = strchr( psz_tmp, '@' );
psz_parser = strchr( psz_tmp, ':' );
psz_pwd = strdup( psz_parser+1 );
if( !psz_user ) psz_user = var_CreateGetString( p_access, "smb-user" );
if( !psz_pwd ) psz_pwd = var_CreateGetString( p_access, "smb-pwd" );
if( psz_pwd && !*psz_pwd ) { free( psz_pwd ); psz_pwd = 0; }
Win32AddConnection( p_access, psz_path, psz_user, psz_pwd, psz_domain);
free( psz_pwd );
char *psz_user, char *psz_pwd,
free( psz_pwd );
i_result = OurWNetAddConnection2( &net_resource, psz_pwd, psz_user, 0 );
free( psz_pwd );
0

116 CVE-2009-2484/vlc_media_player_0.9.9_CVE-2009-2484_smb.c cppfunc 213
static int Open( vlc_object_t *p_this )
access_t     *p_access = (access_t*)p_this;
char         *psz_user = 0, *psz_pwd = 0, *psz_domain = 0;
psz_path = strchr( p_access->psz_path, '/' );
char *psz_tmp = strdup( p_access->psz_path );
psz_tmp[ psz_path - p_access->psz_path ] = 0;
psz_parser = strchr( psz_tmp, '@' );
psz_parser = strchr( psz_tmp, ':' );
psz_pwd = strdup( psz_parser+1 );
if( !psz_user ) psz_user = var_CreateGetString( p_access, "smb-user" );
if( !psz_pwd ) psz_pwd = var_CreateGetString( p_access, "smb-pwd" );
if( psz_pwd && !*psz_pwd ) { free( psz_pwd ); psz_pwd = 0; }
Win32AddConnection( p_access, psz_path, psz_user, psz_pwd, psz_domain);
free( psz_pwd );
char *psz_user, char *psz_pwd,
free( psz_pwd );
i_result = OurWNetAddConnection2( &net_resource, psz_pwd, psz_user, 0 );
free( psz_pwd );
0

188 CVE-2009-2484/vlc_media_player_0.9.9_CVE-2009-2484_smb.c cfunc 222
static int Open( vlc_object_t *p_this )
char         *psz_path, *psz_uri;
psz_path = strchr( p_access->psz_path, '/' );
char *psz_tmp = strdup( p_access->psz_path );
psz_tmp[ psz_path - p_access->psz_path ] = 0;
psz_path = p_access->psz_path;
psz_parser = strchr( psz_tmp, '@' );
*psz_parser = 0;
psz_path = p_access->psz_path + (psz_parser - psz_tmp) + 1;
Win32AddConnection( p_access, psz_path, psz_user, psz_pwd, psz_domain);
i_ret = asprintf( &psz_uri, "
free( psz_uri );
strlcpy( psz_server, psz_path, sizeof( psz_server ) );
psz_parser = strchr( psz_path, '/' );
i_ret = asprintf( &psz_uri, "
free( psz_uri );
static void Win32AddConnection( access_t *p_access, char *psz_path,
i_ret = asprintf( &psz_uri, "
free( psz_uri );
0

189 CVE-2009-2484/vlc_media_player_0.9.9_CVE-2009-2484_smb.c cppfunc 222
static int Open( vlc_object_t *p_this )
char         *psz_path, *psz_uri;
psz_path = strchr( p_access->psz_path, '/' );
char *psz_tmp = strdup( p_access->psz_path );
psz_tmp[ psz_path - p_access->psz_path ] = 0;
psz_path = p_access->psz_path;
psz_parser = strchr( psz_tmp, '@' );
*psz_parser = 0;
psz_path = p_access->psz_path + (psz_parser - psz_tmp) + 1;
Win32AddConnection( p_access, psz_path, psz_user, psz_pwd, psz_domain);
i_ret = asprintf( &psz_uri, "
free( psz_uri );
strlcpy( psz_server, psz_path, sizeof( psz_server ) );
psz_parser = strchr( psz_path, '/' );
i_ret = asprintf( &psz_uri, "
free( psz_uri );
static void Win32AddConnection( access_t *p_access, char *psz_path,
i_ret = asprintf( &psz_uri, "
free( psz_uri );
0

285 CVE-2009-2484/vlc_media_player_0.9.9_CVE-2009-2484_smb.c cfunc 185
psz_tmp[ psz_path - p_access->psz_path ] = 0;
psz_parser = strchr( psz_tmp, '@' );
psz_parser = strchr( psz_tmp, ':' );
psz_parser = strchr( psz_tmp, ';' );
psz_domain = strdup( psz_tmp );
free( psz_tmp );
0

286 CVE-2009-2484/vlc_media_player_0.9.9_CVE-2009-2484_smb.c cppfunc 185
psz_tmp[ psz_path - p_access->psz_path ] = 0;
psz_parser = strchr( psz_tmp, '@' );
psz_parser = strchr( psz_tmp, ':' );
psz_parser = strchr( psz_tmp, ';' );
psz_domain = strdup( psz_tmp );
free( psz_tmp );
0

351 CVE-2009-2484/vlc_media_player_0.9.9_CVE-2009-2484_smb.c cfunc 232
static void Win32AddConnection( access_t *p_access, char *psz_path,
i_ret = asprintf( &psz_uri, "
free( psz_uri );
static int Open( vlc_object_t *p_this )
char         *psz_path, *psz_uri;
psz_path = strchr( p_access->psz_path, '/' );
char *psz_tmp = strdup( p_access->psz_path );
psz_tmp[ psz_path - p_access->psz_path ] = 0;
psz_path = p_access->psz_path;
psz_parser = strchr( psz_tmp, '@' );
*psz_parser = 0;
psz_path = p_access->psz_path + (psz_parser - psz_tmp) + 1;
Win32AddConnection( p_access, psz_path, psz_user, psz_pwd, psz_domain);
i_ret = asprintf( &psz_uri, "
free( psz_uri );
strlcpy( psz_server, psz_path, sizeof( psz_server ) );
psz_parser = strchr( psz_path, '/' );
i_ret = asprintf( &psz_uri, "
free( psz_uri );
0

352 CVE-2009-2484/vlc_media_player_0.9.9_CVE-2009-2484_smb.c cppfunc 232
static void Win32AddConnection( access_t *p_access, char *psz_path,
i_ret = asprintf( &psz_uri, "
free( psz_uri );
static int Open( vlc_object_t *p_this )
char         *psz_path, *psz_uri;
psz_path = strchr( p_access->psz_path, '/' );
char *psz_tmp = strdup( p_access->psz_path );
psz_tmp[ psz_path - p_access->psz_path ] = 0;
psz_path = p_access->psz_path;
psz_parser = strchr( psz_tmp, '@' );
*psz_parser = 0;
psz_path = p_access->psz_path + (psz_parser - psz_tmp) + 1;
Win32AddConnection( p_access, psz_path, psz_user, psz_pwd, psz_domain);
i_ret = asprintf( &psz_uri, "
free( psz_uri );
strlcpy( psz_server, psz_path, sizeof( psz_server ) );
psz_parser = strchr( psz_path, '/' );
i_ret = asprintf( &psz_uri, "
free( psz_uri );
0

363 CVE-2009-2484/vlc_media_player_0.9.9_CVE-2009-2484_smb.c cfunc 289
static void Win32AddConnection( access_t *p_access, char *psz_path,
i_ret = asprintf( &psz_uri, "
free( psz_uri );
strlcpy( psz_server, psz_path, sizeof( psz_server ) );
psz_parser = strchr( psz_path, '/' );
i_ret = asprintf( &psz_uri, "
free( psz_uri );
static int Open( vlc_object_t *p_this )
char         *psz_path, *psz_uri;
psz_path = strchr( p_access->psz_path, '/' );
char *psz_tmp = strdup( p_access->psz_path );
psz_tmp[ psz_path - p_access->psz_path ] = 0;
psz_path = p_access->psz_path;
psz_parser = strchr( psz_tmp, '@' );
*psz_parser = 0;
psz_path = p_access->psz_path + (psz_parser - psz_tmp) + 1;
Win32AddConnection( p_access, psz_path, psz_user, psz_pwd, psz_domain);
i_ret = asprintf( &psz_uri, "
free( psz_uri );
0

364 CVE-2009-2484/vlc_media_player_0.9.9_CVE-2009-2484_smb.c cppfunc 289
static void Win32AddConnection( access_t *p_access, char *psz_path,
i_ret = asprintf( &psz_uri, "
free( psz_uri );
strlcpy( psz_server, psz_path, sizeof( psz_server ) );
psz_parser = strchr( psz_path, '/' );
i_ret = asprintf( &psz_uri, "
free( psz_uri );
static int Open( vlc_object_t *p_this )
char         *psz_path, *psz_uri;
psz_path = strchr( p_access->psz_path, '/' );
char *psz_tmp = strdup( p_access->psz_path );
psz_tmp[ psz_path - p_access->psz_path ] = 0;
psz_path = p_access->psz_path;
psz_parser = strchr( psz_tmp, '@' );
*psz_parser = 0;
psz_path = p_access->psz_path + (psz_parser - psz_tmp) + 1;
Win32AddConnection( p_access, psz_path, psz_user, psz_pwd, psz_domain);
i_ret = asprintf( &psz_uri, "
free( psz_uri );
0

455 CVE-2009-2484/vlc_media_player_0.9.9_CVE-2009-2484_smb.c cfunc 476
static void Win32AddConnection( access_t *p_access, char *psz_path,
strlcpy( psz_server, psz_path, sizeof( psz_server ) );
psz_parser = strchr( psz_path, '/' );
char *psz_parser2 = strchr( ++psz_parser, '/' );
static int Open( vlc_object_t *p_this )
psz_path = strchr( p_access->psz_path, '/' );
char *psz_tmp = strdup( p_access->psz_path );
psz_tmp[ psz_path - p_access->psz_path ] = 0;
psz_path = p_access->psz_path;
psz_parser = strchr( psz_tmp, '@' );
*psz_parser = 0;
psz_path = p_access->psz_path + (psz_parser - psz_tmp) + 1;
Win32AddConnection( p_access, psz_path, psz_user, psz_pwd, psz_domain);
0

500 CVE-2009-2484/vlc_media_player_0.9.9_CVE-2009-2484_smb.c API 500
HINSTANCE hdll = LoadLibrary(_T("MPR.DLL"));
(void *)GetProcAddress( hdll, _T("WNetAddConnection2A") );
FreeLibrary( hdll );
0

632 CVE-2009-2484/vlc_media_player_0.9.9_CVE-2009-2484_smb.c cfunc 481
char psz_remote[MAX_PATH], psz_server[MAX_PATH], psz_share[MAX_PATH];
strlcpy( psz_server, psz_path, sizeof( psz_server ) );
psz_share[0] = 0;
strlcpy( psz_share, psz_parser, sizeof( psz_share ) );
sprintf( psz_remote, "\\\\%s\\%s", psz_server, psz_share );
1

13068 CVE-2009-2484/vlc_media_player_0.9.9_CVE-2009-2484_smb.c Format_String_Attack 446
char psz_remote[MAX_PATH], psz_server[MAX_PATH], psz_share[MAX_PATH];
strlcpy( psz_server, psz_path, sizeof( psz_server ) );
psz_share[0] = 0;
psz_parser = strchr( psz_path, '/' );
if( psz_parser )
char *psz_parser2 = strchr( ++psz_parser, '/' );
if( psz_parser2 )
strlcpy( psz_share, psz_parser, sizeof( psz_share ) );
sprintf( psz_remote, "\\\\%s\\%s", psz_server, psz_share );
1

13069 CVE-2009-2484/vlc_media_player_0.9.9_CVE-2009-2484_smb.c Format_String_Attack 446
char psz_remote[MAX_PATH], psz_server[MAX_PATH], psz_share[MAX_PATH];
strlcpy( psz_server, psz_path, sizeof( psz_server ) );
psz_share[0] = 0;
psz_parser = strchr( psz_path, '/' );
if( psz_parser )
char *psz_parser2 = strchr( ++psz_parser, '/' );
if( psz_parser2 )
strlcpy( psz_share, psz_parser, sizeof( psz_share ) );
snprintf( psz_remote, sizeof( psz_remote ), "\\\\%s\\%s", psz_server, psz_share );
0

13914 CVE-2009-2484/vlc_media_player_0.9.9_CVE-2009-2484_smb.c Format_String_Attack 446
char psz_remote[MAX_PATH], psz_server[MAX_PATH], psz_share[MAX_PATH];
psz_server = func(psz_server);
static char * func(const char * psz_server)
strlcpy( psz_server, psz_path, sizeof( psz_server ) );
return psz_server;
psz_server = func(psz_server);
psz_share[0] = 0;
psz_parser = strchr( psz_path, '/' );
if( psz_parser )
char *psz_parser2 = strchr( ++psz_parser, '/' );
if( psz_parser2 )
strlcpy( psz_share, psz_parser, sizeof( psz_share ) );
sprintf( psz_remote, "\\\\%s\\%s", psz_server, psz_share );
1

13915 CVE-2009-2484/vlc_media_player_0.9.9_CVE-2009-2484_smb.c Format_String_Attack 446
char psz_remote[MAX_PATH], psz_server[MAX_PATH], psz_share[MAX_PATH];
psz_server = func(psz_server);
static char * func(const char * psz_server)
strlcpy( psz_server, psz_path, sizeof( psz_server ) );
return psz_server;
psz_server = func(psz_server);
psz_share[0] = 0;
psz_parser = strchr( psz_path, '/' );
if( psz_parser )
char *psz_parser2 = strchr( ++psz_parser, '/' );
if( psz_parser2 )
strlcpy( psz_share, psz_parser, sizeof( psz_share ) );
snprintf( psz_remote, sizeof( psz_remote ), "\\\\%s\\%s", psz_server, psz_share );
0

13916 CVE-2009-2484/vlc_media_player_0.9.9_CVE-2009-2484_smb.c Format_String_Attack 446
char psz_remote[MAX_PATH], psz_server[MAX_PATH], psz_share[MAX_PATH];
psz_server = func(&psz_server);
static char * func(const char * * ptr)
cahr * psz_server = *ptr;
strlcpy( psz_server, psz_path, sizeof( psz_server ) );
return psz_server;
psz_server = func(&psz_server);
psz_share[0] = 0;
psz_parser = strchr( psz_path, '/' );
if( psz_parser )
char *psz_parser2 = strchr( ++psz_parser, '/' );
if( psz_parser2 )
strlcpy( psz_share, psz_parser, sizeof( psz_share ) );
sprintf( psz_remote, "\\\\%s\\%s", psz_server, psz_share );
1

13917 CVE-2009-2484/vlc_media_player_0.9.9_CVE-2009-2484_smb.c Format_String_Attack 446
char psz_remote[MAX_PATH], psz_server[MAX_PATH], psz_share[MAX_PATH];
psz_server = func(&psz_server);
static char * func(const char * * ptr)
cahr * psz_server = *ptr;
strlcpy( psz_server, psz_path, sizeof( psz_server ) );
return psz_server;
psz_server = func(&psz_server);
psz_share[0] = 0;
psz_parser = strchr( psz_path, '/' );
if( psz_parser )
char *psz_parser2 = strchr( ++psz_parser, '/' );
if( psz_parser2 )
strlcpy( psz_share, psz_parser, sizeof( psz_share ) );
snprintf( psz_remote, sizeof( psz_remote ), "\\\\%s\\%s", psz_server, psz_share );
0

13918 CVE-2009-2484/vlc_media_player_0.9.9_CVE-2009-2484_smb.c Format_String_Attack 446
char psz_remote[MAX_PATH], psz_server[MAX_PATH], psz_share[MAX_PATH];
void (*funcptr) (char *) = badsource;
funcptr(psz_server)
void badsource(char * psz_server)
strlcpy( psz_server, psz_path, sizeof( psz_server ) );
psz_share[0] = 0;
psz_parser = strchr( psz_path, '/' );
if( psz_parser )
char *psz_parser2 = strchr( ++psz_parser, '/' );
if( psz_parser2 )
strlcpy( psz_share, psz_parser, sizeof( psz_share ) );
sprintf( psz_remote, "\\\\%s\\%s", psz_server, psz_share );
1

13919 CVE-2009-2484/vlc_media_player_0.9.9_CVE-2009-2484_smb.c Format_String_Attack 446
char psz_remote[MAX_PATH], psz_server[MAX_PATH], psz_share[MAX_PATH];
void (*funcptr) (char *) = badsource;
funcptr(psz_server)
void badsource(char * psz_server)
strlcpy( psz_server, psz_path, sizeof( psz_server ) );
psz_share[0] = 0;
psz_parser = strchr( psz_path, '/' );
if( psz_parser )
char *psz_parser2 = strchr( ++psz_parser, '/' );
if( psz_parser2 )
strlcpy( psz_share, psz_parser, sizeof( psz_share ) );
snprintf( psz_remote, sizeof( psz_remote ), "\\\\%s\\%s", psz_server, psz_share );
0

13920 CVE-2009-2484/vlc_media_player_0.9.9_CVE-2009-2484_smb.c Format_String_Attack 446
char psz_remote[MAX_PATH], psz_server[MAX_PATH], psz_share[MAX_PATH];
strlcpy( psz_server, psz_path, sizeof( psz_server ) );
char * datacopy = psz_server;
char * psz_server = datacopy;
psz_share[0] = 0;
psz_parser = strchr( psz_path, '/' );
if( psz_parser )
char *psz_parser2 = strchr( ++psz_parser, '/' );
if( psz_parser2 )
strlcpy( psz_share, psz_parser, sizeof( psz_share ) );
sprintf( psz_remote, "\\\\%s\\%s", psz_server, psz_share );
1

13921 CVE-2009-2484/vlc_media_player_0.9.9_CVE-2009-2484_smb.c Format_String_Attack 446
char psz_remote[MAX_PATH], psz_server[MAX_PATH], psz_share[MAX_PATH];
strlcpy( psz_server, psz_path, sizeof( psz_server ) );
char * datacopy = psz_server;
char * psz_server = datacopy;
psz_share[0] = 0;
psz_parser = strchr( psz_path, '/' );
if( psz_parser )
char *psz_parser2 = strchr( ++psz_parser, '/' );
if( psz_parser2 )
strlcpy( psz_share, psz_parser, sizeof( psz_share ) );
snprintf( psz_remote, sizeof( psz_remote ), "\\\\%s\\%s", psz_server, psz_share );
0

13922 CVE-2009-2484/vlc_media_player_0.9.9_CVE-2009-2484_smb.c Format_String_Attack 446
char psz_remote[MAX_PATH], psz_server[MAX_PATH], psz_share[MAX_PATH];
strlcpy( psz_server, psz_path, sizeof( psz_server ) );
psz_share[0] = 0;
psz_parser = strchr( psz_path, '/' );
if( psz_parser )
char *psz_parser2 = strchr( ++psz_parser, '/' );
n = sizeof( psz_share ) +5;
if( psz_parser2 )
strlcpy( psz_share, psz_parser, n-5 );
sprintf( psz_remote, "\\\\%s\\%s", psz_server, psz_share );
1

13923 CVE-2009-2484/vlc_media_player_0.9.9_CVE-2009-2484_smb.c Format_String_Attack 446
char psz_remote[MAX_PATH], psz_server[MAX_PATH], psz_share[MAX_PATH];
strlcpy( psz_server, psz_path, sizeof( psz_server ) );
psz_share[0] = 0;
psz_parser = strchr( psz_path, '/' );
if( psz_parser )
char *psz_parser2 = strchr( ++psz_parser, '/' );
n = sizeof( psz_share ) +5;
if( psz_parser2 )
strlcpy( psz_share, psz_parser, n-5 );
snprintf( psz_remote, sizeof( psz_remote ), "\\\\%s\\%s", psz_server, psz_share );
0

13924 CVE-2009-2484/vlc_media_player_0.9.9_CVE-2009-2484_smb.c Format_String_Attack 446
char psz_remote[MAX_PATH], psz_server[MAX_PATH], psz_share[MAX_PATH];
psz_share[0] = 0;
strlcpy( psz_server, psz_path, sizeof( psz_server ) );
psz_parser = strchr( psz_path, '/' );
if( psz_parser )
char *psz_parser2 = strchr( ++psz_parser, '/' );
if( psz_parser2 )
strlcpy( psz_share, psz_parser, sizeof( psz_share ) );
sprintf( psz_remote, "\\\\%s\\%s", psz_server, psz_share );
1

13925 CVE-2009-2484/vlc_media_player_0.9.9_CVE-2009-2484_smb.c Format_String_Attack 446
char psz_remote[MAX_PATH], psz_server[MAX_PATH], psz_share[MAX_PATH];
psz_share[0] = 0;
strlcpy( psz_server, psz_path, sizeof( psz_server ) );
psz_parser = strchr( psz_path, '/' );
if( psz_parser )
char *psz_parser2 = strchr( ++psz_parser, '/' );
if( psz_parser2 )
strlcpy( psz_share, psz_parser, sizeof( psz_share ) );
snprintf( psz_remote, sizeof( psz_remote ), "\\\\%s\\%s", psz_server, psz_share );
0

13926 CVE-2009-2484/vlc_media_player_0.9.9_CVE-2009-2484_smb.c Format_String_Attack 446
char psz_remote[MAX_PATH], psz_server[MAX_PATH], psz_share[MAX_PATH];
char * dataArray[5];
dataArray[2] = psz_server;
psz_server = badsource(dataArray);
void badsource(char * dataArray[])
char * psz_server = dataArray[2];
strlcpy( psz_server, psz_path, sizeof( psz_server ) );
psz_share[0] = 0;
psz_parser = strchr( psz_path, '/' );
if( psz_parser )
char *psz_parser2 = strchr( ++psz_parser, '/' );
if( psz_parser2 )
strlcpy( psz_share, psz_parser, sizeof( psz_share ) );
sprintf( psz_remote, "\\\\%s\\%s", psz_server, psz_share );
1

13927 CVE-2009-2484/vlc_media_player_0.9.9_CVE-2009-2484_smb.c Format_String_Attack 446
char psz_remote[MAX_PATH], psz_server[MAX_PATH], psz_share[MAX_PATH];
char * dataArray[5];
dataArray[2] = psz_server;
psz_server = badsource(dataArray);
void badsource(char * dataArray[])
char * psz_server = dataArray[2];
strlcpy( psz_server, psz_path, sizeof( psz_server ) );
psz_share[0] = 0;
psz_parser = strchr( psz_path, '/' );
if( psz_parser )
char *psz_parser2 = strchr( ++psz_parser, '/' );
if( psz_parser2 )
strlcpy( psz_share, psz_parser, sizeof( psz_share ) );
snprintf( psz_remote, sizeof( psz_remote ), "\\\\%s\\%s", psz_server, psz_share );
0

13928 CVE-2009-2484/vlc_media_player_0.9.9_CVE-2009-2484_smb.c Format_String_Attack 446
char psz_remote[MAX_PATH], psz_server[MAX_PATH], psz_share[MAX_PATH];
unionType myUnion;
strlcpy( psz_server, psz_path, sizeof( psz_server ) );
myUnion.unionFirst = psz_server;
cahr * psz_server = myUnion.unionSecond;
psz_share[0] = 0;
psz_parser = strchr( psz_path, '/' );
if( psz_parser )
char *psz_parser2 = strchr( ++psz_parser, '/' );
if( psz_parser2 )
strlcpy( psz_share, psz_parser, sizeof( psz_share ) );
sprintf( psz_remote, "\\\\%s\\%s", psz_server, psz_share );
1

13929 CVE-2009-2484/vlc_media_player_0.9.9_CVE-2009-2484_smb.c Format_String_Attack 446
char psz_remote[MAX_PATH], psz_server[MAX_PATH], psz_share[MAX_PATH];
unionType myUnion;
strlcpy( psz_server, psz_path, sizeof( psz_server ) );
myUnion.unionFirst = psz_server;
cahr * psz_server = myUnion.unionSecond;
psz_share[0] = 0;
psz_parser = strchr( psz_path, '/' );
if( psz_parser )
char *psz_parser2 = strchr( ++psz_parser, '/' );
if( psz_parser2 )
strlcpy( psz_share, psz_parser, sizeof( psz_share ) );
snprintf( psz_remote, sizeof( psz_remote ), "\\\\%s\\%s", psz_server, psz_share );
0

13930 CVE-2009-2484/vlc_media_player_0.9.9_CVE-2009-2484_smb.c Format_String_Attack 446
char psz_remote[MAX_PATH], psz_server[MAX_PATH], psz_share[MAX_PATH];
structType myStruct;
myStruct.structFirst = psz_server;
psz_server = badsource(myStruct)
void badsource(structType myStruct)
char * psz_server = myStruct.structFirst;
strlcpy( psz_server, psz_path, sizeof( psz_server ) );
psz_share[0] = 0;
psz_parser = strchr( psz_path, '/' );
if( psz_parser )
char *psz_parser2 = strchr( ++psz_parser, '/' );
if( psz_parser2 )
strlcpy( psz_share, psz_parser, sizeof( psz_share ) );
sprintf( psz_remote, "\\\\%s\\%s", psz_server, psz_share );
1

13931 CVE-2009-2484/vlc_media_player_0.9.9_CVE-2009-2484_smb.c Format_String_Attack 446
char psz_remote[MAX_PATH], psz_server[MAX_PATH], psz_share[MAX_PATH];
structType myStruct;
myStruct.structFirst = psz_server;
psz_server = badsource(myStruct)
void badsource(structType myStruct)
char * psz_server = myStruct.structFirst;
strlcpy( psz_server, psz_path, sizeof( psz_server ) );
psz_share[0] = 0;
psz_parser = strchr( psz_path, '/' );
if( psz_parser )
char *psz_parser2 = strchr( ++psz_parser, '/' );
if( psz_parser2 )
strlcpy( psz_share, psz_parser, sizeof( psz_share ) );
snprintf( psz_remote, sizeof( psz_remote ), "\\\\%s\\%s", psz_server, psz_share );
0

