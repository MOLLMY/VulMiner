610 CVE-2013-0874/Ffmpeg_1.1.2_CVE_2013_0874_libavcodec_tiff.c cfunc 249
if (!sep) sep = ", ";
ap = av_malloc((5 + strlen(sep)) * count);
ap0   = ap;
int l = snprintf(ap, 5 + strlen(sep), "%d%s", sp[i], sep);
ap0[strlen(ap0) - strlen(sep)] = '\0';
tag   = tget_short(&s->gb, s->le);
type  = tget_short(&s->gb, s->le);
count = tget_long(&s->gb, s->le);
off   = tget_long(&s->gb, s->le);
ADD_METADATA(count, "ModelPixelScaleTag", NULL);
ADD_METADATA(count, "ModelTransformationTag", NULL);
ADD_METADATA(count, "ModelTiepointTag", NULL);
ADD_METADATA(1, "GeoTIFF_Version", NULL);
ADD_METADATA(2, "GeoTIFF_Key_Revision", ".");
ADD_METADATA(count, "artist", NULL);
ADD_METADATA(count, "copyright", NULL);
ADD_METADATA(count, "date", NULL);
ADD_METADATA(count, "document_name", NULL);
ADD_METADATA(count, "computer", NULL);
ADD_METADATA(count, "description", NULL);
ADD_METADATA(count, "make", NULL);
ADD_METADATA(count, "model", NULL);
ADD_METADATA(count, "page_name", NULL);
ADD_METADATA(count, "page_number", " / ");
ADD_METADATA(count, "software", NULL);
const char *name, const char *sep, TiffContext *s)
case TIFF_SHORT : return add_shorts_metadata(count, name, sep, s);
const char *sep, TiffContext *s)
if (count >= INT_MAX / sizeof(int16_t) || count <= 0)
if (bytestream2_get_bytes_left(&s->gb) < count * sizeof(int16_t))
sp = av_malloc(count * sizeof(int16_t));
ap = shorts2str(sp, count, sep);
static char *shorts2str(int16_t *sp, int count, const char *sep)
ap = av_malloc((5 + strlen(sep)) * count);
ap0   = ap;
ap0[strlen(ap0) - strlen(sep)] = '\0';
static int add_metadata(int count, int type,
case TIFF_SHORT : return add_shorts_metadata(count, name, sep, s);
static int add_shorts_metadata(int count, const char *name,
sp = av_malloc(count * sizeof(int16_t));
ap = shorts2str(sp, count, sep);
static unsigned tget_short(GetByteContext *gb, int le)
unsigned v = le ? bytestream2_get_le16(gb) : bytestream2_get_be16(gb);
tag   = tget_short(&s->gb, s->le);
type  = tget_short(&s->gb, s->le);
count = tget_long(&s->gb, s->le);
static unsigned tget_long(GetByteContext *gb, int le)
unsigned v = le ? bytestream2_get_le32(gb) : bytestream2_get_be32(gb);
return v;
count = tget_long(&s->gb, s->le);
off   = tget_long(&s->gb, s->le);
ADD_METADATA(count, "software", NULL);
1

638 CVE-2013-0874/Ffmpeg_1.1.2_CVE_2013_0874_libavcodec_tiff.c cfunc 231
if (!sep) sep = ", ";
component_len = 15 + strlen(sep);
ap = av_malloc(component_len * count);
ap0   = ap;
unsigned l = snprintf(ap, component_len, "%f%s", dp[i], sep);
ap0[strlen(ap0) - strlen(sep)] = '\0';
tag   = tget_short(&s->gb, s->le);
type  = tget_short(&s->gb, s->le);
count = tget_long(&s->gb, s->le);
off   = tget_long(&s->gb, s->le);
ADD_METADATA(count, "ModelPixelScaleTag", NULL);
ADD_METADATA(count, "ModelTransformationTag", NULL);
ADD_METADATA(count, "ModelTiepointTag", NULL);
ADD_METADATA(1, "GeoTIFF_Version", NULL);
ADD_METADATA(2, "GeoTIFF_Key_Revision", ".");
char *ap = doubles2str(&dp[s->geotags[i].offset], s->geotags[i].count, ", ");
ADD_METADATA(count, "artist", NULL);
ADD_METADATA(count, "copyright", NULL);
ADD_METADATA(count, "date", NULL);
const char *name, const char *sep, TiffContext *s)
case TIFF_DOUBLE: return add_doubles_metadata(count, name, sep, s);
const char *name, const char *sep,
ap = doubles2str(dp, count, sep);
ADD_METADATA(count, "document_name", NULL);
const char *name, const char *sep, TiffContext *s)
case TIFF_DOUBLE: return add_doubles_metadata(count, name, sep, s);
const char *name, const char *sep,
ap = doubles2str(dp, count, sep);
ADD_METADATA(count, "ModelPixelScaleTag", NULL);
ADD_METADATA(count, "ModelTransformationTag", NULL);
ADD_METADATA(count, "ModelTiepointTag", NULL);
ADD_METADATA(1, "GeoTIFF_Version", NULL);
ADD_METADATA(2, "GeoTIFF_Key_Revision", ".");
ADD_METADATA(count, "artist", NULL);
ADD_METADATA(count, "copyright", NULL);
ADD_METADATA(count, "computer", NULL);
ADD_METADATA(count, "description", NULL);
ADD_METADATA(count, "make", NULL);
ADD_METADATA(count, "model", NULL);
ADD_METADATA(count, "page_name", NULL);
ADD_METADATA(count, "page_number", " / ");
ADD_METADATA(count, "software", NULL);
const char *name, const char *sep, TiffContext *s)
case TIFF_DOUBLE: return add_doubles_metadata(count, name, sep, s);
const char *name, const char *sep,
ap = doubles2str(dp, count, sep);
static int add_metadata(int count, int type,
case TIFF_DOUBLE: return add_doubles_metadata(count, name, sep, s);
static int add_doubles_metadata(int count,
dp = av_malloc(count * sizeof(double));
ap = doubles2str(dp, count, sep);
static char *doubles2str(double *dp, int count, const char *sep)
component_len = 15 + strlen(sep);
ap = av_malloc(component_len * count);
ap0   = ap;
ap0[strlen(ap0) - strlen(sep)] = '\0';
static unsigned tget_long(GetByteContext *gb, int le)
unsigned v = le ? bytestream2_get_le32(gb) : bytestream2_get_be32(gb);
return v;
count = tget_long(&s->gb, s->le);
off   = tget_long(&s->gb, s->le);
ADD_METADATA(count, "software", NULL);
static unsigned tget_short(GetByteContext *gb, int le)
unsigned v = le ? bytestream2_get_le16(gb) : bytestream2_get_be16(gb);
tag   = tget_short(&s->gb, s->le);
type  = tget_short(&s->gb, s->le);
count = tget_long(&s->gb, s->le);
1

657 CVE-2013-0874/Ffmpeg_1.1.2_CVE_2013_0874_libavcodec_tiff.c cfunc 224
return i.f64;
if (!sep) sep = ", ";
component_len = 15 + strlen(sep);
ap = av_malloc(component_len * count);
ap[0] = '\0';
unsigned l = snprintf(ap, component_len, "%f%s", dp[i], sep);
ap += l;
unsigned l = snprintf(ap, component_len, "%f%s", dp[i], sep);
ap0[strlen(ap0) - strlen(sep)] = '\0';
tag   = tget_short(&s->gb, s->le);
type  = tget_short(&s->gb, s->le);
count = tget_long(&s->gb, s->le);
off   = tget_long(&s->gb, s->le);
ADD_METADATA(count, "ModelPixelScaleTag", NULL);
ADD_METADATA(count, "ModelTransformationTag", NULL);
ADD_METADATA(count, "ModelTiepointTag", NULL);
ADD_METADATA(1, "GeoTIFF_Version", NULL);
ADD_METADATA(2, "GeoTIFF_Key_Revision", ".");
dp[i] = tget_double(&s->gb, s->le);
char *ap = doubles2str(&dp[s->geotags[i].offset], s->geotags[i].count, ", ");
ADD_METADATA(count, "artist", NULL);
ADD_METADATA(count, "copyright", NULL);
ADD_METADATA(count, "date", NULL);
ADD_METADATA(count, "document_name", NULL);
ADD_METADATA(count, "computer", NULL);
ADD_METADATA(count, "description", NULL);
ADD_METADATA(count, "make", NULL);
ADD_METADATA(count, "model", NULL);
ADD_METADATA(count, "page_name", NULL);
ADD_METADATA(count, "page_number", " / ");
ADD_METADATA(count, "software", NULL);
const char *name, const char *sep, TiffContext *s)
case TIFF_DOUBLE: return add_doubles_metadata(count, name, sep, s);
const char *name, const char *sep,
dp[i] = tget_double(&s->gb, s->le);
av_freep(&dp);
ap = doubles2str(dp, count, sep);
static char *doubles2str(double *dp, int count, const char *sep)
component_len = 15 + strlen(sep);
ap = av_malloc(component_len * count);
unsigned l = snprintf(ap, component_len, "%f%s", dp[i], sep);
static int add_metadata(int count, int type,
case TIFF_DOUBLE: return add_doubles_metadata(count, name, sep, s);
static int add_doubles_metadata(int count,
dp = av_malloc(count * sizeof(double));
ap = doubles2str(dp, count, sep);
static unsigned tget_long(GetByteContext *gb, int le)
unsigned v = le ? bytestream2_get_le32(gb) : bytestream2_get_be32(gb);
return v;
count = tget_long(&s->gb, s->le);
off   = tget_long(&s->gb, s->le);
dp = av_malloc(count * sizeof(double));
char *ap = doubles2str(&dp[s->geotags[i].offset], s->geotags[i].count, ", ");
ADD_METADATA(count, "software", NULL);
static unsigned tget_short(GetByteContext *gb, int le)
unsigned v = le ? bytestream2_get_le16(gb) : bytestream2_get_be16(gb);
tag   = tget_short(&s->gb, s->le);
type  = tget_short(&s->gb, s->le);
count = tget_long(&s->gb, s->le);
1

14272 CVE-2013-0874/Ffmpeg_1.1.2_CVE_2013_0874_libavcodec_tiff.c Format_String_Attack 246
static char *doubles2str(double *dp, int count, const char *sep)
char *ap, *ap0;
int component_len;
if (!sep) sep = ", ";
component_len = 15 + strlen(sep);
ap = av_malloc(component_len * count);
if (!ap)
return NULL;
ap0   = ap;
ap[0] = '\0';
for (i = 0; i < count; i++)
unsigned l = snprintf(ap, component_len, "%f%s", dp[i], sep);
if(l >= component_len)
av_free(ap0);
return NULL;
ap += l;
ap0[strlen(ap0) - strlen(sep)] = '\0';
return ap0;
static char *shorts2str(int16_t *sp, int count, const char *sep)
char *ap, *ap0;
if (!sep) sep = ", ";
ap = av_malloc((5 + strlen(sep)) * count);
if (!ap)
return NULL;
ap0   = ap;
ap[0] = '\0';
for (i = 0; i < count; i++)
int l = snprintf(ap, 5 + strlen(sep), "%d%s", sp[i], sep);
ap += l;
ap0[strlen(ap0) - strlen(sep)] = '\0';
return ap0;
1

14273 CVE-2013-0874/Ffmpeg_1.1.2_CVE_2013_0874_libavcodec_tiff.c Format_String_Attack 246
static char *doubles2str(double *dp, int count, const char *sep)
char *ap, *ap0;
uint64_t component_len;
if (!sep) sep = ", ";
component_len = 15LL + strlen(sep);
if (count >= (INT_MAX - 1)/component_len)
return NULL;
ap = av_malloc(component_len * count + 1);
if (!ap)
return NULL;
ap0   = ap;
ap[0] = '\0';
for (i = 0; i < count; i++)
unsigned l = snprintf(ap, component_len, "%f%s", dp[i], sep);
if(l >= component_len)
av_free(ap0);
return NULL;
ap += l;
ap0[strlen(ap0) - strlen(sep)] = '\0';
return ap0;
static char *shorts2str(int16_t *sp, int count, const char *sep)
char *ap, *ap0;
uint64_t component_len;
if (!sep) sep = ", ";
component_len = 7LL + strlen(sep);
if (count >= (INT_MAX - 1)/component_len)
return NULL;
ap = av_malloc(component_len * count + 1);
if (!ap)
return NULL;
ap0   = ap;
ap[0] = '\0';
for (i = 0; i < count; i++)
unsigned l = snprintf(ap, component_len, "%d%s", sp[i], sep);
if (l >= component_len
av_free(ap0);
return NULL;
ap += l;
ap0[strlen(ap0) - strlen(sep)] = '\0';
return ap0;
0

